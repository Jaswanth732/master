# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.claim_type_custom_fields import ClaimTypeCustomFields  # noqa: F401,E501
from swagger_server.models.incident_info_type import IncidentInfoType  # noqa: F401,E501
from swagger_server.models.invoice_custom_type import InvoiceCustomType  # noqa: F401,E501
from swagger_server.models.invoice_type_exchange_rates import InvoiceTypeExchangeRates  # noqa: F401,E501
from swagger_server.models.invoice_type_info import InvoiceTypeInfo  # noqa: F401,E501
from swagger_server.models.invoice_type_invoice_lines import InvoiceTypeInvoiceLines  # noqa: F401,E501
from swagger_server.models.invoice_type_notes import InvoiceTypeNotes  # noqa: F401,E501
from swagger_server import util


class InvoiceType(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, invoice_nbr: int=None, member_nbr: int=None, policy_nbr: int=None, invoice_type_id: str=None, audit_id: str=None, external_reference_id: str=None, batch_nbr: int=None, insurance_company_nbr: int=None, invoice_type_info: InvoiceTypeInfo=None, submitter_type_id: str=None, submission_method_id: str=None, claim_nbr: int=None, billing_provider_id: str=None, service_provider_id: str=None, pay_to_entity_type_id: str=None, pay_to_id: str=None, invoice_currency_id: str=None, payment_currency_id: str=None, product_currency_id: str=None, received_date: datetime=None, invoice_status_id: str=None, creation_user_id: str=None, exchange_rates: InvoiceTypeExchangeRates=None, invoice_custom_fields: ClaimTypeCustomFields=None, notes: InvoiceTypeNotes=None, invoice_lines: InvoiceTypeInvoiceLines=None, incident: IncidentInfoType=None, custom: InvoiceCustomType=None):  # noqa: E501
        """InvoiceType - a model defined in Swagger

        :param invoice_nbr: The invoice_nbr of this InvoiceType.  # noqa: E501
        :type invoice_nbr: int
        :param member_nbr: The member_nbr of this InvoiceType.  # noqa: E501
        :type member_nbr: int
        :param policy_nbr: The policy_nbr of this InvoiceType.  # noqa: E501
        :type policy_nbr: int
        :param invoice_type_id: The invoice_type_id of this InvoiceType.  # noqa: E501
        :type invoice_type_id: str
        :param audit_id: The audit_id of this InvoiceType.  # noqa: E501
        :type audit_id: str
        :param external_reference_id: The external_reference_id of this InvoiceType.  # noqa: E501
        :type external_reference_id: str
        :param batch_nbr: The batch_nbr of this InvoiceType.  # noqa: E501
        :type batch_nbr: int
        :param insurance_company_nbr: The insurance_company_nbr of this InvoiceType.  # noqa: E501
        :type insurance_company_nbr: int
        :param invoice_type_info: The invoice_type_info of this InvoiceType.  # noqa: E501
        :type invoice_type_info: InvoiceTypeInfo
        :param submitter_type_id: The submitter_type_id of this InvoiceType.  # noqa: E501
        :type submitter_type_id: str
        :param submission_method_id: The submission_method_id of this InvoiceType.  # noqa: E501
        :type submission_method_id: str
        :param claim_nbr: The claim_nbr of this InvoiceType.  # noqa: E501
        :type claim_nbr: int
        :param billing_provider_id: The billing_provider_id of this InvoiceType.  # noqa: E501
        :type billing_provider_id: str
        :param service_provider_id: The service_provider_id of this InvoiceType.  # noqa: E501
        :type service_provider_id: str
        :param pay_to_entity_type_id: The pay_to_entity_type_id of this InvoiceType.  # noqa: E501
        :type pay_to_entity_type_id: str
        :param pay_to_id: The pay_to_id of this InvoiceType.  # noqa: E501
        :type pay_to_id: str
        :param invoice_currency_id: The invoice_currency_id of this InvoiceType.  # noqa: E501
        :type invoice_currency_id: str
        :param payment_currency_id: The payment_currency_id of this InvoiceType.  # noqa: E501
        :type payment_currency_id: str
        :param product_currency_id: The product_currency_id of this InvoiceType.  # noqa: E501
        :type product_currency_id: str
        :param received_date: The received_date of this InvoiceType.  # noqa: E501
        :type received_date: datetime
        :param invoice_status_id: The invoice_status_id of this InvoiceType.  # noqa: E501
        :type invoice_status_id: str
        :param creation_user_id: The creation_user_id of this InvoiceType.  # noqa: E501
        :type creation_user_id: str
        :param exchange_rates: The exchange_rates of this InvoiceType.  # noqa: E501
        :type exchange_rates: InvoiceTypeExchangeRates
        :param invoice_custom_fields: The invoice_custom_fields of this InvoiceType.  # noqa: E501
        :type invoice_custom_fields: ClaimTypeCustomFields
        :param notes: The notes of this InvoiceType.  # noqa: E501
        :type notes: InvoiceTypeNotes
        :param invoice_lines: The invoice_lines of this InvoiceType.  # noqa: E501
        :type invoice_lines: InvoiceTypeInvoiceLines
        :param incident: The incident of this InvoiceType.  # noqa: E501
        :type incident: IncidentInfoType
        :param custom: The custom of this InvoiceType.  # noqa: E501
        :type custom: InvoiceCustomType
        """
        self.swagger_types = {
            'invoice_nbr': int,
            'member_nbr': int,
            'policy_nbr': int,
            'invoice_type_id': str,
            'audit_id': str,
            'external_reference_id': str,
            'batch_nbr': int,
            'insurance_company_nbr': int,
            'invoice_type_info': InvoiceTypeInfo,
            'submitter_type_id': str,
            'submission_method_id': str,
            'claim_nbr': int,
            'billing_provider_id': str,
            'service_provider_id': str,
            'pay_to_entity_type_id': str,
            'pay_to_id': str,
            'invoice_currency_id': str,
            'payment_currency_id': str,
            'product_currency_id': str,
            'received_date': datetime,
            'invoice_status_id': str,
            'creation_user_id': str,
            'exchange_rates': InvoiceTypeExchangeRates,
            'invoice_custom_fields': ClaimTypeCustomFields,
            'notes': InvoiceTypeNotes,
            'invoice_lines': InvoiceTypeInvoiceLines,
            'incident': IncidentInfoType,
            'custom': InvoiceCustomType
        }

        self.attribute_map = {
            'invoice_nbr': 'invoiceNbr',
            'member_nbr': 'memberNbr',
            'policy_nbr': 'policyNbr',
            'invoice_type_id': 'invoiceTypeId',
            'audit_id': 'auditId',
            'external_reference_id': 'externalReferenceId',
            'batch_nbr': 'batchNbr',
            'insurance_company_nbr': 'insuranceCompanyNbr',
            'invoice_type_info': 'invoiceTypeInfo',
            'submitter_type_id': 'submitterTypeId',
            'submission_method_id': 'submissionMethodId',
            'claim_nbr': 'claimNbr',
            'billing_provider_id': 'billingProviderId',
            'service_provider_id': 'serviceProviderId',
            'pay_to_entity_type_id': 'payToEntityTypeId',
            'pay_to_id': 'payToId',
            'invoice_currency_id': 'invoiceCurrencyId',
            'payment_currency_id': 'paymentCurrencyId',
            'product_currency_id': 'productCurrencyId',
            'received_date': 'receivedDate',
            'invoice_status_id': 'invoiceStatusId',
            'creation_user_id': 'creationUserId',
            'exchange_rates': 'exchangeRates',
            'invoice_custom_fields': 'invoiceCustomFields',
            'notes': 'notes',
            'invoice_lines': 'invoiceLines',
            'incident': 'incident',
            'custom': 'custom'
        }
        self._invoice_nbr = invoice_nbr
        self._member_nbr = member_nbr
        self._policy_nbr = policy_nbr
        self._invoice_type_id = invoice_type_id
        self._audit_id = audit_id
        self._external_reference_id = external_reference_id
        self._batch_nbr = batch_nbr
        self._insurance_company_nbr = insurance_company_nbr
        self._invoice_type_info = invoice_type_info
        self._submitter_type_id = submitter_type_id
        self._submission_method_id = submission_method_id
        self._claim_nbr = claim_nbr
        self._billing_provider_id = billing_provider_id
        self._service_provider_id = service_provider_id
        self._pay_to_entity_type_id = pay_to_entity_type_id
        self._pay_to_id = pay_to_id
        self._invoice_currency_id = invoice_currency_id
        self._payment_currency_id = payment_currency_id
        self._product_currency_id = product_currency_id
        self._received_date = received_date
        self._invoice_status_id = invoice_status_id
        self._creation_user_id = creation_user_id
        self._exchange_rates = exchange_rates
        self._invoice_custom_fields = invoice_custom_fields
        self._notes = notes
        self._invoice_lines = invoice_lines
        self._incident = incident
        self._custom = custom

    @classmethod
    def from_dict(cls, dikt) -> 'InvoiceType':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The InvoiceType of this InvoiceType.  # noqa: E501
        :rtype: InvoiceType
        """
        return util.deserialize_model(dikt, cls)

    @property
    def invoice_nbr(self) -> int:
        """Gets the invoice_nbr of this InvoiceType.


        :return: The invoice_nbr of this InvoiceType.
        :rtype: int
        """
        return self._invoice_nbr

    @invoice_nbr.setter
    def invoice_nbr(self, invoice_nbr: int):
        """Sets the invoice_nbr of this InvoiceType.


        :param invoice_nbr: The invoice_nbr of this InvoiceType.
        :type invoice_nbr: int
        """

        self._invoice_nbr = invoice_nbr

    @property
    def member_nbr(self) -> int:
        """Gets the member_nbr of this InvoiceType.


        :return: The member_nbr of this InvoiceType.
        :rtype: int
        """
        return self._member_nbr

    @member_nbr.setter
    def member_nbr(self, member_nbr: int):
        """Sets the member_nbr of this InvoiceType.


        :param member_nbr: The member_nbr of this InvoiceType.
        :type member_nbr: int
        """

        self._member_nbr = member_nbr

    @property
    def policy_nbr(self) -> int:
        """Gets the policy_nbr of this InvoiceType.


        :return: The policy_nbr of this InvoiceType.
        :rtype: int
        """
        return self._policy_nbr

    @policy_nbr.setter
    def policy_nbr(self, policy_nbr: int):
        """Sets the policy_nbr of this InvoiceType.


        :param policy_nbr: The policy_nbr of this InvoiceType.
        :type policy_nbr: int
        """

        self._policy_nbr = policy_nbr

    @property
    def invoice_type_id(self) -> str:
        """Gets the invoice_type_id of this InvoiceType.


        :return: The invoice_type_id of this InvoiceType.
        :rtype: str
        """
        return self._invoice_type_id

    @invoice_type_id.setter
    def invoice_type_id(self, invoice_type_id: str):
        """Sets the invoice_type_id of this InvoiceType.


        :param invoice_type_id: The invoice_type_id of this InvoiceType.
        :type invoice_type_id: str
        """
        if invoice_type_id is None:
            raise ValueError("Invalid value for `invoice_type_id`, must not be `None`")  # noqa: E501

        self._invoice_type_id = invoice_type_id

    @property
    def audit_id(self) -> str:
        """Gets the audit_id of this InvoiceType.


        :return: The audit_id of this InvoiceType.
        :rtype: str
        """
        return self._audit_id

    @audit_id.setter
    def audit_id(self, audit_id: str):
        """Sets the audit_id of this InvoiceType.


        :param audit_id: The audit_id of this InvoiceType.
        :type audit_id: str
        """
        if audit_id is None:
            raise ValueError("Invalid value for `audit_id`, must not be `None`")  # noqa: E501

        self._audit_id = audit_id

    @property
    def external_reference_id(self) -> str:
        """Gets the external_reference_id of this InvoiceType.


        :return: The external_reference_id of this InvoiceType.
        :rtype: str
        """
        return self._external_reference_id

    @external_reference_id.setter
    def external_reference_id(self, external_reference_id: str):
        """Sets the external_reference_id of this InvoiceType.


        :param external_reference_id: The external_reference_id of this InvoiceType.
        :type external_reference_id: str
        """
        if external_reference_id is None:
            raise ValueError("Invalid value for `external_reference_id`, must not be `None`")  # noqa: E501

        self._external_reference_id = external_reference_id

    @property
    def batch_nbr(self) -> int:
        """Gets the batch_nbr of this InvoiceType.


        :return: The batch_nbr of this InvoiceType.
        :rtype: int
        """
        return self._batch_nbr

    @batch_nbr.setter
    def batch_nbr(self, batch_nbr: int):
        """Sets the batch_nbr of this InvoiceType.


        :param batch_nbr: The batch_nbr of this InvoiceType.
        :type batch_nbr: int
        """

        self._batch_nbr = batch_nbr

    @property
    def insurance_company_nbr(self) -> int:
        """Gets the insurance_company_nbr of this InvoiceType.


        :return: The insurance_company_nbr of this InvoiceType.
        :rtype: int
        """
        return self._insurance_company_nbr

    @insurance_company_nbr.setter
    def insurance_company_nbr(self, insurance_company_nbr: int):
        """Sets the insurance_company_nbr of this InvoiceType.


        :param insurance_company_nbr: The insurance_company_nbr of this InvoiceType.
        :type insurance_company_nbr: int
        """

        self._insurance_company_nbr = insurance_company_nbr

    @property
    def invoice_type_info(self) -> InvoiceTypeInfo:
        """Gets the invoice_type_info of this InvoiceType.


        :return: The invoice_type_info of this InvoiceType.
        :rtype: InvoiceTypeInfo
        """
        return self._invoice_type_info

    @invoice_type_info.setter
    def invoice_type_info(self, invoice_type_info: InvoiceTypeInfo):
        """Sets the invoice_type_info of this InvoiceType.


        :param invoice_type_info: The invoice_type_info of this InvoiceType.
        :type invoice_type_info: InvoiceTypeInfo
        """

        self._invoice_type_info = invoice_type_info

    @property
    def submitter_type_id(self) -> str:
        """Gets the submitter_type_id of this InvoiceType.


        :return: The submitter_type_id of this InvoiceType.
        :rtype: str
        """
        return self._submitter_type_id

    @submitter_type_id.setter
    def submitter_type_id(self, submitter_type_id: str):
        """Sets the submitter_type_id of this InvoiceType.


        :param submitter_type_id: The submitter_type_id of this InvoiceType.
        :type submitter_type_id: str
        """

        self._submitter_type_id = submitter_type_id

    @property
    def submission_method_id(self) -> str:
        """Gets the submission_method_id of this InvoiceType.


        :return: The submission_method_id of this InvoiceType.
        :rtype: str
        """
        return self._submission_method_id

    @submission_method_id.setter
    def submission_method_id(self, submission_method_id: str):
        """Sets the submission_method_id of this InvoiceType.


        :param submission_method_id: The submission_method_id of this InvoiceType.
        :type submission_method_id: str
        """

        self._submission_method_id = submission_method_id

    @property
    def claim_nbr(self) -> int:
        """Gets the claim_nbr of this InvoiceType.


        :return: The claim_nbr of this InvoiceType.
        :rtype: int
        """
        return self._claim_nbr

    @claim_nbr.setter
    def claim_nbr(self, claim_nbr: int):
        """Sets the claim_nbr of this InvoiceType.


        :param claim_nbr: The claim_nbr of this InvoiceType.
        :type claim_nbr: int
        """

        self._claim_nbr = claim_nbr

    @property
    def billing_provider_id(self) -> str:
        """Gets the billing_provider_id of this InvoiceType.


        :return: The billing_provider_id of this InvoiceType.
        :rtype: str
        """
        return self._billing_provider_id

    @billing_provider_id.setter
    def billing_provider_id(self, billing_provider_id: str):
        """Sets the billing_provider_id of this InvoiceType.


        :param billing_provider_id: The billing_provider_id of this InvoiceType.
        :type billing_provider_id: str
        """
        if billing_provider_id is None:
            raise ValueError("Invalid value for `billing_provider_id`, must not be `None`")  # noqa: E501

        self._billing_provider_id = billing_provider_id

    @property
    def service_provider_id(self) -> str:
        """Gets the service_provider_id of this InvoiceType.


        :return: The service_provider_id of this InvoiceType.
        :rtype: str
        """
        return self._service_provider_id

    @service_provider_id.setter
    def service_provider_id(self, service_provider_id: str):
        """Sets the service_provider_id of this InvoiceType.


        :param service_provider_id: The service_provider_id of this InvoiceType.
        :type service_provider_id: str
        """

        self._service_provider_id = service_provider_id

    @property
    def pay_to_entity_type_id(self) -> str:
        """Gets the pay_to_entity_type_id of this InvoiceType.


        :return: The pay_to_entity_type_id of this InvoiceType.
        :rtype: str
        """
        return self._pay_to_entity_type_id

    @pay_to_entity_type_id.setter
    def pay_to_entity_type_id(self, pay_to_entity_type_id: str):
        """Sets the pay_to_entity_type_id of this InvoiceType.


        :param pay_to_entity_type_id: The pay_to_entity_type_id of this InvoiceType.
        :type pay_to_entity_type_id: str
        """

        self._pay_to_entity_type_id = pay_to_entity_type_id

    @property
    def pay_to_id(self) -> str:
        """Gets the pay_to_id of this InvoiceType.


        :return: The pay_to_id of this InvoiceType.
        :rtype: str
        """
        return self._pay_to_id

    @pay_to_id.setter
    def pay_to_id(self, pay_to_id: str):
        """Sets the pay_to_id of this InvoiceType.


        :param pay_to_id: The pay_to_id of this InvoiceType.
        :type pay_to_id: str
        """

        self._pay_to_id = pay_to_id

    @property
    def invoice_currency_id(self) -> str:
        """Gets the invoice_currency_id of this InvoiceType.


        :return: The invoice_currency_id of this InvoiceType.
        :rtype: str
        """
        return self._invoice_currency_id

    @invoice_currency_id.setter
    def invoice_currency_id(self, invoice_currency_id: str):
        """Sets the invoice_currency_id of this InvoiceType.


        :param invoice_currency_id: The invoice_currency_id of this InvoiceType.
        :type invoice_currency_id: str
        """

        self._invoice_currency_id = invoice_currency_id

    @property
    def payment_currency_id(self) -> str:
        """Gets the payment_currency_id of this InvoiceType.


        :return: The payment_currency_id of this InvoiceType.
        :rtype: str
        """
        return self._payment_currency_id

    @payment_currency_id.setter
    def payment_currency_id(self, payment_currency_id: str):
        """Sets the payment_currency_id of this InvoiceType.


        :param payment_currency_id: The payment_currency_id of this InvoiceType.
        :type payment_currency_id: str
        """

        self._payment_currency_id = payment_currency_id

    @property
    def product_currency_id(self) -> str:
        """Gets the product_currency_id of this InvoiceType.


        :return: The product_currency_id of this InvoiceType.
        :rtype: str
        """
        return self._product_currency_id

    @product_currency_id.setter
    def product_currency_id(self, product_currency_id: str):
        """Sets the product_currency_id of this InvoiceType.


        :param product_currency_id: The product_currency_id of this InvoiceType.
        :type product_currency_id: str
        """

        self._product_currency_id = product_currency_id

    @property
    def received_date(self) -> datetime:
        """Gets the received_date of this InvoiceType.


        :return: The received_date of this InvoiceType.
        :rtype: datetime
        """
        return self._received_date

    @received_date.setter
    def received_date(self, received_date: datetime):
        """Sets the received_date of this InvoiceType.


        :param received_date: The received_date of this InvoiceType.
        :type received_date: datetime
        """

        self._received_date = received_date

    @property
    def invoice_status_id(self) -> str:
        """Gets the invoice_status_id of this InvoiceType.


        :return: The invoice_status_id of this InvoiceType.
        :rtype: str
        """
        return self._invoice_status_id

    @invoice_status_id.setter
    def invoice_status_id(self, invoice_status_id: str):
        """Sets the invoice_status_id of this InvoiceType.


        :param invoice_status_id: The invoice_status_id of this InvoiceType.
        :type invoice_status_id: str
        """

        self._invoice_status_id = invoice_status_id

    @property
    def creation_user_id(self) -> str:
        """Gets the creation_user_id of this InvoiceType.


        :return: The creation_user_id of this InvoiceType.
        :rtype: str
        """
        return self._creation_user_id

    @creation_user_id.setter
    def creation_user_id(self, creation_user_id: str):
        """Sets the creation_user_id of this InvoiceType.


        :param creation_user_id: The creation_user_id of this InvoiceType.
        :type creation_user_id: str
        """

        self._creation_user_id = creation_user_id

    @property
    def exchange_rates(self) -> InvoiceTypeExchangeRates:
        """Gets the exchange_rates of this InvoiceType.


        :return: The exchange_rates of this InvoiceType.
        :rtype: InvoiceTypeExchangeRates
        """
        return self._exchange_rates

    @exchange_rates.setter
    def exchange_rates(self, exchange_rates: InvoiceTypeExchangeRates):
        """Sets the exchange_rates of this InvoiceType.


        :param exchange_rates: The exchange_rates of this InvoiceType.
        :type exchange_rates: InvoiceTypeExchangeRates
        """

        self._exchange_rates = exchange_rates

    @property
    def invoice_custom_fields(self) -> ClaimTypeCustomFields:
        """Gets the invoice_custom_fields of this InvoiceType.


        :return: The invoice_custom_fields of this InvoiceType.
        :rtype: ClaimTypeCustomFields
        """
        return self._invoice_custom_fields

    @invoice_custom_fields.setter
    def invoice_custom_fields(self, invoice_custom_fields: ClaimTypeCustomFields):
        """Sets the invoice_custom_fields of this InvoiceType.


        :param invoice_custom_fields: The invoice_custom_fields of this InvoiceType.
        :type invoice_custom_fields: ClaimTypeCustomFields
        """

        self._invoice_custom_fields = invoice_custom_fields

    @property
    def notes(self) -> InvoiceTypeNotes:
        """Gets the notes of this InvoiceType.


        :return: The notes of this InvoiceType.
        :rtype: InvoiceTypeNotes
        """
        return self._notes

    @notes.setter
    def notes(self, notes: InvoiceTypeNotes):
        """Sets the notes of this InvoiceType.


        :param notes: The notes of this InvoiceType.
        :type notes: InvoiceTypeNotes
        """

        self._notes = notes

    @property
    def invoice_lines(self) -> InvoiceTypeInvoiceLines:
        """Gets the invoice_lines of this InvoiceType.


        :return: The invoice_lines of this InvoiceType.
        :rtype: InvoiceTypeInvoiceLines
        """
        return self._invoice_lines

    @invoice_lines.setter
    def invoice_lines(self, invoice_lines: InvoiceTypeInvoiceLines):
        """Sets the invoice_lines of this InvoiceType.


        :param invoice_lines: The invoice_lines of this InvoiceType.
        :type invoice_lines: InvoiceTypeInvoiceLines
        """
        if invoice_lines is None:
            raise ValueError("Invalid value for `invoice_lines`, must not be `None`")  # noqa: E501

        self._invoice_lines = invoice_lines

    @property
    def incident(self) -> IncidentInfoType:
        """Gets the incident of this InvoiceType.


        :return: The incident of this InvoiceType.
        :rtype: IncidentInfoType
        """
        return self._incident

    @incident.setter
    def incident(self, incident: IncidentInfoType):
        """Sets the incident of this InvoiceType.


        :param incident: The incident of this InvoiceType.
        :type incident: IncidentInfoType
        """
        if incident is None:
            raise ValueError("Invalid value for `incident`, must not be `None`")  # noqa: E501

        self._incident = incident

    @property
    def custom(self) -> InvoiceCustomType:
        """Gets the custom of this InvoiceType.


        :return: The custom of this InvoiceType.
        :rtype: InvoiceCustomType
        """
        return self._custom

    @custom.setter
    def custom(self, custom: InvoiceCustomType):
        """Sets the custom of this InvoiceType.


        :param custom: The custom of this InvoiceType.
        :type custom: InvoiceCustomType
        """

        self._custom = custom
