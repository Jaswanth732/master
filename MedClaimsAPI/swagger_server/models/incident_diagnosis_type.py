# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.claim_type_custom_fields import ClaimTypeCustomFields  # noqa: F401,E501
from swagger_server.models.invoice_type_notes import InvoiceTypeNotes  # noqa: F401,E501
from swagger_server import util


class IncidentDiagnosisType(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, diagnosis_type_id: str=None, diagnosis_id: str=None, diagnosis_date: datetime=None, diagnosis_qualifier_id: str=None, diagnosis_nbr: int=None, notes: InvoiceTypeNotes=None, incident_diagnosis_custom_fields: ClaimTypeCustomFields=None):  # noqa: E501
        """IncidentDiagnosisType - a model defined in Swagger

        :param diagnosis_type_id: The diagnosis_type_id of this IncidentDiagnosisType.  # noqa: E501
        :type diagnosis_type_id: str
        :param diagnosis_id: The diagnosis_id of this IncidentDiagnosisType.  # noqa: E501
        :type diagnosis_id: str
        :param diagnosis_date: The diagnosis_date of this IncidentDiagnosisType.  # noqa: E501
        :type diagnosis_date: datetime
        :param diagnosis_qualifier_id: The diagnosis_qualifier_id of this IncidentDiagnosisType.  # noqa: E501
        :type diagnosis_qualifier_id: str
        :param diagnosis_nbr: The diagnosis_nbr of this IncidentDiagnosisType.  # noqa: E501
        :type diagnosis_nbr: int
        :param notes: The notes of this IncidentDiagnosisType.  # noqa: E501
        :type notes: InvoiceTypeNotes
        :param incident_diagnosis_custom_fields: The incident_diagnosis_custom_fields of this IncidentDiagnosisType.  # noqa: E501
        :type incident_diagnosis_custom_fields: ClaimTypeCustomFields
        """
        self.swagger_types = {
            'diagnosis_type_id': str,
            'diagnosis_id': str,
            'diagnosis_date': datetime,
            'diagnosis_qualifier_id': str,
            'diagnosis_nbr': int,
            'notes': InvoiceTypeNotes,
            'incident_diagnosis_custom_fields': ClaimTypeCustomFields
        }

        self.attribute_map = {
            'diagnosis_type_id': 'diagnosisTypeId',
            'diagnosis_id': 'diagnosisId',
            'diagnosis_date': 'diagnosisDate',
            'diagnosis_qualifier_id': 'diagnosisQualifierId',
            'diagnosis_nbr': 'diagnosisNbr',
            'notes': 'notes',
            'incident_diagnosis_custom_fields': 'incidentDiagnosisCustomFields'
        }
        self._diagnosis_type_id = diagnosis_type_id
        self._diagnosis_id = diagnosis_id
        self._diagnosis_date = diagnosis_date
        self._diagnosis_qualifier_id = diagnosis_qualifier_id
        self._diagnosis_nbr = diagnosis_nbr
        self._notes = notes
        self._incident_diagnosis_custom_fields = incident_diagnosis_custom_fields

    @classmethod
    def from_dict(cls, dikt) -> 'IncidentDiagnosisType':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The IncidentDiagnosisType of this IncidentDiagnosisType.  # noqa: E501
        :rtype: IncidentDiagnosisType
        """
        return util.deserialize_model(dikt, cls)

    @property
    def diagnosis_type_id(self) -> str:
        """Gets the diagnosis_type_id of this IncidentDiagnosisType.


        :return: The diagnosis_type_id of this IncidentDiagnosisType.
        :rtype: str
        """
        return self._diagnosis_type_id

    @diagnosis_type_id.setter
    def diagnosis_type_id(self, diagnosis_type_id: str):
        """Sets the diagnosis_type_id of this IncidentDiagnosisType.


        :param diagnosis_type_id: The diagnosis_type_id of this IncidentDiagnosisType.
        :type diagnosis_type_id: str
        """
        if diagnosis_type_id is None:
            raise ValueError("Invalid value for `diagnosis_type_id`, must not be `None`")  # noqa: E501

        self._diagnosis_type_id = diagnosis_type_id

    @property
    def diagnosis_id(self) -> str:
        """Gets the diagnosis_id of this IncidentDiagnosisType.


        :return: The diagnosis_id of this IncidentDiagnosisType.
        :rtype: str
        """
        return self._diagnosis_id

    @diagnosis_id.setter
    def diagnosis_id(self, diagnosis_id: str):
        """Sets the diagnosis_id of this IncidentDiagnosisType.


        :param diagnosis_id: The diagnosis_id of this IncidentDiagnosisType.
        :type diagnosis_id: str
        """
        if diagnosis_id is None:
            raise ValueError("Invalid value for `diagnosis_id`, must not be `None`")  # noqa: E501

        self._diagnosis_id = diagnosis_id

    @property
    def diagnosis_date(self) -> datetime:
        """Gets the diagnosis_date of this IncidentDiagnosisType.


        :return: The diagnosis_date of this IncidentDiagnosisType.
        :rtype: datetime
        """
        return self._diagnosis_date

    @diagnosis_date.setter
    def diagnosis_date(self, diagnosis_date: datetime):
        """Sets the diagnosis_date of this IncidentDiagnosisType.


        :param diagnosis_date: The diagnosis_date of this IncidentDiagnosisType.
        :type diagnosis_date: datetime
        """

        self._diagnosis_date = diagnosis_date

    @property
    def diagnosis_qualifier_id(self) -> str:
        """Gets the diagnosis_qualifier_id of this IncidentDiagnosisType.


        :return: The diagnosis_qualifier_id of this IncidentDiagnosisType.
        :rtype: str
        """
        return self._diagnosis_qualifier_id

    @diagnosis_qualifier_id.setter
    def diagnosis_qualifier_id(self, diagnosis_qualifier_id: str):
        """Sets the diagnosis_qualifier_id of this IncidentDiagnosisType.


        :param diagnosis_qualifier_id: The diagnosis_qualifier_id of this IncidentDiagnosisType.
        :type diagnosis_qualifier_id: str
        """
        if diagnosis_qualifier_id is None:
            raise ValueError("Invalid value for `diagnosis_qualifier_id`, must not be `None`")  # noqa: E501

        self._diagnosis_qualifier_id = diagnosis_qualifier_id

    @property
    def diagnosis_nbr(self) -> int:
        """Gets the diagnosis_nbr of this IncidentDiagnosisType.


        :return: The diagnosis_nbr of this IncidentDiagnosisType.
        :rtype: int
        """
        return self._diagnosis_nbr

    @diagnosis_nbr.setter
    def diagnosis_nbr(self, diagnosis_nbr: int):
        """Sets the diagnosis_nbr of this IncidentDiagnosisType.


        :param diagnosis_nbr: The diagnosis_nbr of this IncidentDiagnosisType.
        :type diagnosis_nbr: int
        """

        self._diagnosis_nbr = diagnosis_nbr

    @property
    def notes(self) -> InvoiceTypeNotes:
        """Gets the notes of this IncidentDiagnosisType.


        :return: The notes of this IncidentDiagnosisType.
        :rtype: InvoiceTypeNotes
        """
        return self._notes

    @notes.setter
    def notes(self, notes: InvoiceTypeNotes):
        """Sets the notes of this IncidentDiagnosisType.


        :param notes: The notes of this IncidentDiagnosisType.
        :type notes: InvoiceTypeNotes
        """

        self._notes = notes

    @property
    def incident_diagnosis_custom_fields(self) -> ClaimTypeCustomFields:
        """Gets the incident_diagnosis_custom_fields of this IncidentDiagnosisType.


        :return: The incident_diagnosis_custom_fields of this IncidentDiagnosisType.
        :rtype: ClaimTypeCustomFields
        """
        return self._incident_diagnosis_custom_fields

    @incident_diagnosis_custom_fields.setter
    def incident_diagnosis_custom_fields(self, incident_diagnosis_custom_fields: ClaimTypeCustomFields):
        """Sets the incident_diagnosis_custom_fields of this IncidentDiagnosisType.


        :param incident_diagnosis_custom_fields: The incident_diagnosis_custom_fields of this IncidentDiagnosisType.
        :type incident_diagnosis_custom_fields: ClaimTypeCustomFields
        """

        self._incident_diagnosis_custom_fields = incident_diagnosis_custom_fields
