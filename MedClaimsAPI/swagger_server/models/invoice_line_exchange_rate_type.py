# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class InvoiceLineExchangeRateType(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, source_currency_id: str=None, target_currency_id: str=None, exchange_rate: float=None, exchange_date: datetime=None):  # noqa: E501
        """InvoiceLineExchangeRateType - a model defined in Swagger

        :param source_currency_id: The source_currency_id of this InvoiceLineExchangeRateType.  # noqa: E501
        :type source_currency_id: str
        :param target_currency_id: The target_currency_id of this InvoiceLineExchangeRateType.  # noqa: E501
        :type target_currency_id: str
        :param exchange_rate: The exchange_rate of this InvoiceLineExchangeRateType.  # noqa: E501
        :type exchange_rate: float
        :param exchange_date: The exchange_date of this InvoiceLineExchangeRateType.  # noqa: E501
        :type exchange_date: datetime
        """
        self.swagger_types = {
            'source_currency_id': str,
            'target_currency_id': str,
            'exchange_rate': float,
            'exchange_date': datetime
        }

        self.attribute_map = {
            'source_currency_id': 'sourceCurrencyId',
            'target_currency_id': 'targetCurrencyId',
            'exchange_rate': 'exchangeRate',
            'exchange_date': 'exchangeDate'
        }
        self._source_currency_id = source_currency_id
        self._target_currency_id = target_currency_id
        self._exchange_rate = exchange_rate
        self._exchange_date = exchange_date

    @classmethod
    def from_dict(cls, dikt) -> 'InvoiceLineExchangeRateType':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The InvoiceLineExchangeRateType of this InvoiceLineExchangeRateType.  # noqa: E501
        :rtype: InvoiceLineExchangeRateType
        """
        return util.deserialize_model(dikt, cls)

    @property
    def source_currency_id(self) -> str:
        """Gets the source_currency_id of this InvoiceLineExchangeRateType.


        :return: The source_currency_id of this InvoiceLineExchangeRateType.
        :rtype: str
        """
        return self._source_currency_id

    @source_currency_id.setter
    def source_currency_id(self, source_currency_id: str):
        """Sets the source_currency_id of this InvoiceLineExchangeRateType.


        :param source_currency_id: The source_currency_id of this InvoiceLineExchangeRateType.
        :type source_currency_id: str
        """

        self._source_currency_id = source_currency_id

    @property
    def target_currency_id(self) -> str:
        """Gets the target_currency_id of this InvoiceLineExchangeRateType.


        :return: The target_currency_id of this InvoiceLineExchangeRateType.
        :rtype: str
        """
        return self._target_currency_id

    @target_currency_id.setter
    def target_currency_id(self, target_currency_id: str):
        """Sets the target_currency_id of this InvoiceLineExchangeRateType.


        :param target_currency_id: The target_currency_id of this InvoiceLineExchangeRateType.
        :type target_currency_id: str
        """

        self._target_currency_id = target_currency_id

    @property
    def exchange_rate(self) -> float:
        """Gets the exchange_rate of this InvoiceLineExchangeRateType.


        :return: The exchange_rate of this InvoiceLineExchangeRateType.
        :rtype: float
        """
        return self._exchange_rate

    @exchange_rate.setter
    def exchange_rate(self, exchange_rate: float):
        """Sets the exchange_rate of this InvoiceLineExchangeRateType.


        :param exchange_rate: The exchange_rate of this InvoiceLineExchangeRateType.
        :type exchange_rate: float
        """

        self._exchange_rate = exchange_rate

    @property
    def exchange_date(self) -> datetime:
        """Gets the exchange_date of this InvoiceLineExchangeRateType.


        :return: The exchange_date of this InvoiceLineExchangeRateType.
        :rtype: datetime
        """
        return self._exchange_date

    @exchange_date.setter
    def exchange_date(self, exchange_date: datetime):
        """Sets the exchange_date of this InvoiceLineExchangeRateType.


        :param exchange_date: The exchange_date of this InvoiceLineExchangeRateType.
        :type exchange_date: datetime
        """

        self._exchange_date = exchange_date
