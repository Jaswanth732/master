# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.incident_diagnosis_type import IncidentDiagnosisType  # noqa: F401,E501
from swagger_server import util


class IncidentInfoTypeDiagnoses(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, diagnosis: List[IncidentDiagnosisType]=None):  # noqa: E501
        """IncidentInfoTypeDiagnoses - a model defined in Swagger

        :param diagnosis: The diagnosis of this IncidentInfoTypeDiagnoses.  # noqa: E501
        :type diagnosis: List[IncidentDiagnosisType]
        """
        self.swagger_types = {
            'diagnosis': List[IncidentDiagnosisType]
        }

        self.attribute_map = {
            'diagnosis': 'diagnosis'
        }
        self._diagnosis = diagnosis

    @classmethod
    def from_dict(cls, dikt) -> 'IncidentInfoTypeDiagnoses':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The IncidentInfoType_diagnoses of this IncidentInfoTypeDiagnoses.  # noqa: E501
        :rtype: IncidentInfoTypeDiagnoses
        """
        return util.deserialize_model(dikt, cls)

    @property
    def diagnosis(self) -> List[IncidentDiagnosisType]:
        """Gets the diagnosis of this IncidentInfoTypeDiagnoses.


        :return: The diagnosis of this IncidentInfoTypeDiagnoses.
        :rtype: List[IncidentDiagnosisType]
        """
        return self._diagnosis

    @diagnosis.setter
    def diagnosis(self, diagnosis: List[IncidentDiagnosisType]):
        """Sets the diagnosis of this IncidentInfoTypeDiagnoses.


        :param diagnosis: The diagnosis of this IncidentInfoTypeDiagnoses.
        :type diagnosis: List[IncidentDiagnosisType]
        """

        self._diagnosis = diagnosis
