# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class NoteType(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, note_type_id: str=None, note: str=None, note_nbr: int=None):  # noqa: E501
        """NoteType - a model defined in Swagger

        :param note_type_id: The note_type_id of this NoteType.  # noqa: E501
        :type note_type_id: str
        :param note: The note of this NoteType.  # noqa: E501
        :type note: str
        :param note_nbr: The note_nbr of this NoteType.  # noqa: E501
        :type note_nbr: int
        """
        self.swagger_types = {
            'note_type_id': str,
            'note': str,
            'note_nbr': int
        }

        self.attribute_map = {
            'note_type_id': 'noteTypeId',
            'note': 'note',
            'note_nbr': 'noteNbr'
        }
        self._note_type_id = note_type_id
        self._note = note
        self._note_nbr = note_nbr

    @classmethod
    def from_dict(cls, dikt) -> 'NoteType':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The NoteType of this NoteType.  # noqa: E501
        :rtype: NoteType
        """
        return util.deserialize_model(dikt, cls)

    @property
    def note_type_id(self) -> str:
        """Gets the note_type_id of this NoteType.


        :return: The note_type_id of this NoteType.
        :rtype: str
        """
        return self._note_type_id

    @note_type_id.setter
    def note_type_id(self, note_type_id: str):
        """Sets the note_type_id of this NoteType.


        :param note_type_id: The note_type_id of this NoteType.
        :type note_type_id: str
        """

        self._note_type_id = note_type_id

    @property
    def note(self) -> str:
        """Gets the note of this NoteType.


        :return: The note of this NoteType.
        :rtype: str
        """
        return self._note

    @note.setter
    def note(self, note: str):
        """Sets the note of this NoteType.


        :param note: The note of this NoteType.
        :type note: str
        """

        self._note = note

    @property
    def note_nbr(self) -> int:
        """Gets the note_nbr of this NoteType.


        :return: The note_nbr of this NoteType.
        :rtype: int
        """
        return self._note_nbr

    @note_nbr.setter
    def note_nbr(self, note_nbr: int):
        """Sets the note_nbr of this NoteType.


        :param note_nbr: The note_nbr of this NoteType.
        :type note_nbr: int
        """

        self._note_nbr = note_nbr
