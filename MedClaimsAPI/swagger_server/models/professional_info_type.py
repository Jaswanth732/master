# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class ProfessionalInfoType(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, invoice_date: datetime=None, prescription_date: datetime=None, referral_date: datetime=None, claim_frequency_type_id: str=None):  # noqa: E501
        """ProfessionalInfoType - a model defined in Swagger

        :param invoice_date: The invoice_date of this ProfessionalInfoType.  # noqa: E501
        :type invoice_date: datetime
        :param prescription_date: The prescription_date of this ProfessionalInfoType.  # noqa: E501
        :type prescription_date: datetime
        :param referral_date: The referral_date of this ProfessionalInfoType.  # noqa: E501
        :type referral_date: datetime
        :param claim_frequency_type_id: The claim_frequency_type_id of this ProfessionalInfoType.  # noqa: E501
        :type claim_frequency_type_id: str
        """
        self.swagger_types = {
            'invoice_date': datetime,
            'prescription_date': datetime,
            'referral_date': datetime,
            'claim_frequency_type_id': str
        }

        self.attribute_map = {
            'invoice_date': 'invoiceDate',
            'prescription_date': 'prescriptionDate',
            'referral_date': 'referralDate',
            'claim_frequency_type_id': 'claimFrequencyTypeId'
        }
        self._invoice_date = invoice_date
        self._prescription_date = prescription_date
        self._referral_date = referral_date
        self._claim_frequency_type_id = claim_frequency_type_id

    @classmethod
    def from_dict(cls, dikt) -> 'ProfessionalInfoType':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ProfessionalInfoType of this ProfessionalInfoType.  # noqa: E501
        :rtype: ProfessionalInfoType
        """
        return util.deserialize_model(dikt, cls)

    @property
    def invoice_date(self) -> datetime:
        """Gets the invoice_date of this ProfessionalInfoType.


        :return: The invoice_date of this ProfessionalInfoType.
        :rtype: datetime
        """
        return self._invoice_date

    @invoice_date.setter
    def invoice_date(self, invoice_date: datetime):
        """Sets the invoice_date of this ProfessionalInfoType.


        :param invoice_date: The invoice_date of this ProfessionalInfoType.
        :type invoice_date: datetime
        """
        if invoice_date is None:
            raise ValueError("Invalid value for `invoice_date`, must not be `None`")  # noqa: E501

        self._invoice_date = invoice_date

    @property
    def prescription_date(self) -> datetime:
        """Gets the prescription_date of this ProfessionalInfoType.


        :return: The prescription_date of this ProfessionalInfoType.
        :rtype: datetime
        """
        return self._prescription_date

    @prescription_date.setter
    def prescription_date(self, prescription_date: datetime):
        """Sets the prescription_date of this ProfessionalInfoType.


        :param prescription_date: The prescription_date of this ProfessionalInfoType.
        :type prescription_date: datetime
        """

        self._prescription_date = prescription_date

    @property
    def referral_date(self) -> datetime:
        """Gets the referral_date of this ProfessionalInfoType.


        :return: The referral_date of this ProfessionalInfoType.
        :rtype: datetime
        """
        return self._referral_date

    @referral_date.setter
    def referral_date(self, referral_date: datetime):
        """Sets the referral_date of this ProfessionalInfoType.


        :param referral_date: The referral_date of this ProfessionalInfoType.
        :type referral_date: datetime
        """

        self._referral_date = referral_date

    @property
    def claim_frequency_type_id(self) -> str:
        """Gets the claim_frequency_type_id of this ProfessionalInfoType.


        :return: The claim_frequency_type_id of this ProfessionalInfoType.
        :rtype: str
        """
        return self._claim_frequency_type_id

    @claim_frequency_type_id.setter
    def claim_frequency_type_id(self, claim_frequency_type_id: str):
        """Sets the claim_frequency_type_id of this ProfessionalInfoType.


        :param claim_frequency_type_id: The claim_frequency_type_id of this ProfessionalInfoType.
        :type claim_frequency_type_id: str
        """

        self._claim_frequency_type_id = claim_frequency_type_id
