# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.claim_item_info_type_reserves import ClaimItemInfoTypeReserves  # noqa: F401,E501
from swagger_server.models.reserve_level_indicator_type import ReserveLevelIndicatorType  # noqa: F401,E501
from swagger_server import util


class ClaimItemInfoType(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, claim_nbr: int=None, reserve_level_id: ReserveLevelIndicatorType=None, reserves: ClaimItemInfoTypeReserves=None):  # noqa: E501
        """ClaimItemInfoType - a model defined in Swagger

        :param claim_nbr: The claim_nbr of this ClaimItemInfoType.  # noqa: E501
        :type claim_nbr: int
        :param reserve_level_id: The reserve_level_id of this ClaimItemInfoType.  # noqa: E501
        :type reserve_level_id: ReserveLevelIndicatorType
        :param reserves: The reserves of this ClaimItemInfoType.  # noqa: E501
        :type reserves: ClaimItemInfoTypeReserves
        """
        self.swagger_types = {
            'claim_nbr': int,
            'reserve_level_id': ReserveLevelIndicatorType,
            'reserves': ClaimItemInfoTypeReserves
        }

        self.attribute_map = {
            'claim_nbr': 'claimNbr',
            'reserve_level_id': 'reserveLevelId',
            'reserves': 'reserves'
        }
        self._claim_nbr = claim_nbr
        self._reserve_level_id = reserve_level_id
        self._reserves = reserves

    @classmethod
    def from_dict(cls, dikt) -> 'ClaimItemInfoType':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ClaimItemInfoType of this ClaimItemInfoType.  # noqa: E501
        :rtype: ClaimItemInfoType
        """
        return util.deserialize_model(dikt, cls)

    @property
    def claim_nbr(self) -> int:
        """Gets the claim_nbr of this ClaimItemInfoType.


        :return: The claim_nbr of this ClaimItemInfoType.
        :rtype: int
        """
        return self._claim_nbr

    @claim_nbr.setter
    def claim_nbr(self, claim_nbr: int):
        """Sets the claim_nbr of this ClaimItemInfoType.


        :param claim_nbr: The claim_nbr of this ClaimItemInfoType.
        :type claim_nbr: int
        """
        if claim_nbr is None:
            raise ValueError("Invalid value for `claim_nbr`, must not be `None`")  # noqa: E501

        self._claim_nbr = claim_nbr

    @property
    def reserve_level_id(self) -> ReserveLevelIndicatorType:
        """Gets the reserve_level_id of this ClaimItemInfoType.


        :return: The reserve_level_id of this ClaimItemInfoType.
        :rtype: ReserveLevelIndicatorType
        """
        return self._reserve_level_id

    @reserve_level_id.setter
    def reserve_level_id(self, reserve_level_id: ReserveLevelIndicatorType):
        """Sets the reserve_level_id of this ClaimItemInfoType.


        :param reserve_level_id: The reserve_level_id of this ClaimItemInfoType.
        :type reserve_level_id: ReserveLevelIndicatorType
        """
        if reserve_level_id is None:
            raise ValueError("Invalid value for `reserve_level_id`, must not be `None`")  # noqa: E501

        self._reserve_level_id = reserve_level_id

    @property
    def reserves(self) -> ClaimItemInfoTypeReserves:
        """Gets the reserves of this ClaimItemInfoType.


        :return: The reserves of this ClaimItemInfoType.
        :rtype: ClaimItemInfoTypeReserves
        """
        return self._reserves

    @reserves.setter
    def reserves(self, reserves: ClaimItemInfoTypeReserves):
        """Sets the reserves of this ClaimItemInfoType.


        :param reserves: The reserves of this ClaimItemInfoType.
        :type reserves: ClaimItemInfoTypeReserves
        """
        if reserves is None:
            raise ValueError("Invalid value for `reserves`, must not be `None`")  # noqa: E501

        self._reserves = reserves
