# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class InvoiceImportTransactionType(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, import_nbr: int=None, invoice_nbr: int=None, batch_nbr: int=None, policy_id: str=None, member_id: str=None, import_status_id: str=None, failed_reason: str=None):  # noqa: E501
        """InvoiceImportTransactionType - a model defined in Swagger

        :param import_nbr: The import_nbr of this InvoiceImportTransactionType.  # noqa: E501
        :type import_nbr: int
        :param invoice_nbr: The invoice_nbr of this InvoiceImportTransactionType.  # noqa: E501
        :type invoice_nbr: int
        :param batch_nbr: The batch_nbr of this InvoiceImportTransactionType.  # noqa: E501
        :type batch_nbr: int
        :param policy_id: The policy_id of this InvoiceImportTransactionType.  # noqa: E501
        :type policy_id: str
        :param member_id: The member_id of this InvoiceImportTransactionType.  # noqa: E501
        :type member_id: str
        :param import_status_id: The import_status_id of this InvoiceImportTransactionType.  # noqa: E501
        :type import_status_id: str
        :param failed_reason: The failed_reason of this InvoiceImportTransactionType.  # noqa: E501
        :type failed_reason: str
        """
        self.swagger_types = {
            'import_nbr': int,
            'invoice_nbr': int,
            'batch_nbr': int,
            'policy_id': str,
            'member_id': str,
            'import_status_id': str,
            'failed_reason': str
        }

        self.attribute_map = {
            'import_nbr': 'importNbr',
            'invoice_nbr': 'invoiceNbr',
            'batch_nbr': 'batchNbr',
            'policy_id': 'policyId',
            'member_id': 'memberId',
            'import_status_id': 'importStatusId',
            'failed_reason': 'failedReason'
        }
        self._import_nbr = import_nbr
        self._invoice_nbr = invoice_nbr
        self._batch_nbr = batch_nbr
        self._policy_id = policy_id
        self._member_id = member_id
        self._import_status_id = import_status_id
        self._failed_reason = failed_reason

    @classmethod
    def from_dict(cls, dikt) -> 'InvoiceImportTransactionType':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The InvoiceImportTransactionType of this InvoiceImportTransactionType.  # noqa: E501
        :rtype: InvoiceImportTransactionType
        """
        return util.deserialize_model(dikt, cls)

    @property
    def import_nbr(self) -> int:
        """Gets the import_nbr of this InvoiceImportTransactionType.


        :return: The import_nbr of this InvoiceImportTransactionType.
        :rtype: int
        """
        return self._import_nbr

    @import_nbr.setter
    def import_nbr(self, import_nbr: int):
        """Sets the import_nbr of this InvoiceImportTransactionType.


        :param import_nbr: The import_nbr of this InvoiceImportTransactionType.
        :type import_nbr: int
        """

        self._import_nbr = import_nbr

    @property
    def invoice_nbr(self) -> int:
        """Gets the invoice_nbr of this InvoiceImportTransactionType.


        :return: The invoice_nbr of this InvoiceImportTransactionType.
        :rtype: int
        """
        return self._invoice_nbr

    @invoice_nbr.setter
    def invoice_nbr(self, invoice_nbr: int):
        """Sets the invoice_nbr of this InvoiceImportTransactionType.


        :param invoice_nbr: The invoice_nbr of this InvoiceImportTransactionType.
        :type invoice_nbr: int
        """

        self._invoice_nbr = invoice_nbr

    @property
    def batch_nbr(self) -> int:
        """Gets the batch_nbr of this InvoiceImportTransactionType.


        :return: The batch_nbr of this InvoiceImportTransactionType.
        :rtype: int
        """
        return self._batch_nbr

    @batch_nbr.setter
    def batch_nbr(self, batch_nbr: int):
        """Sets the batch_nbr of this InvoiceImportTransactionType.


        :param batch_nbr: The batch_nbr of this InvoiceImportTransactionType.
        :type batch_nbr: int
        """

        self._batch_nbr = batch_nbr

    @property
    def policy_id(self) -> str:
        """Gets the policy_id of this InvoiceImportTransactionType.


        :return: The policy_id of this InvoiceImportTransactionType.
        :rtype: str
        """
        return self._policy_id

    @policy_id.setter
    def policy_id(self, policy_id: str):
        """Sets the policy_id of this InvoiceImportTransactionType.


        :param policy_id: The policy_id of this InvoiceImportTransactionType.
        :type policy_id: str
        """

        self._policy_id = policy_id

    @property
    def member_id(self) -> str:
        """Gets the member_id of this InvoiceImportTransactionType.


        :return: The member_id of this InvoiceImportTransactionType.
        :rtype: str
        """
        return self._member_id

    @member_id.setter
    def member_id(self, member_id: str):
        """Sets the member_id of this InvoiceImportTransactionType.


        :param member_id: The member_id of this InvoiceImportTransactionType.
        :type member_id: str
        """

        self._member_id = member_id

    @property
    def import_status_id(self) -> str:
        """Gets the import_status_id of this InvoiceImportTransactionType.


        :return: The import_status_id of this InvoiceImportTransactionType.
        :rtype: str
        """
        return self._import_status_id

    @import_status_id.setter
    def import_status_id(self, import_status_id: str):
        """Sets the import_status_id of this InvoiceImportTransactionType.


        :param import_status_id: The import_status_id of this InvoiceImportTransactionType.
        :type import_status_id: str
        """

        self._import_status_id = import_status_id

    @property
    def failed_reason(self) -> str:
        """Gets the failed_reason of this InvoiceImportTransactionType.


        :return: The failed_reason of this InvoiceImportTransactionType.
        :rtype: str
        """
        return self._failed_reason

    @failed_reason.setter
    def failed_reason(self, failed_reason: str):
        """Sets the failed_reason of this InvoiceImportTransactionType.


        :param failed_reason: The failed_reason of this InvoiceImportTransactionType.
        :type failed_reason: str
        """

        self._failed_reason = failed_reason
