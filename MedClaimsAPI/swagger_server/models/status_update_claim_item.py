# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class StatusUpdateClaimItem(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, claim_nbr: int=None, _date: datetime=None, notes: str=None):  # noqa: E501
        """StatusUpdateClaimItem - a model defined in Swagger

        :param claim_nbr: The claim_nbr of this StatusUpdateClaimItem.  # noqa: E501
        :type claim_nbr: int
        :param _date: The _date of this StatusUpdateClaimItem.  # noqa: E501
        :type _date: datetime
        :param notes: The notes of this StatusUpdateClaimItem.  # noqa: E501
        :type notes: str
        """
        self.swagger_types = {
            'claim_nbr': int,
            '_date': datetime,
            'notes': str
        }

        self.attribute_map = {
            'claim_nbr': 'claimNbr',
            '_date': 'date',
            'notes': 'notes'
        }
        self._claim_nbr = claim_nbr
        self.__date = _date
        self._notes = notes

    @classmethod
    def from_dict(cls, dikt) -> 'StatusUpdateClaimItem':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The StatusUpdateClaimItem of this StatusUpdateClaimItem.  # noqa: E501
        :rtype: StatusUpdateClaimItem
        """
        return util.deserialize_model(dikt, cls)

    @property
    def claim_nbr(self) -> int:
        """Gets the claim_nbr of this StatusUpdateClaimItem.


        :return: The claim_nbr of this StatusUpdateClaimItem.
        :rtype: int
        """
        return self._claim_nbr

    @claim_nbr.setter
    def claim_nbr(self, claim_nbr: int):
        """Sets the claim_nbr of this StatusUpdateClaimItem.


        :param claim_nbr: The claim_nbr of this StatusUpdateClaimItem.
        :type claim_nbr: int
        """
        if claim_nbr is None:
            raise ValueError("Invalid value for `claim_nbr`, must not be `None`")  # noqa: E501

        self._claim_nbr = claim_nbr

    @property
    def _date(self) -> datetime:
        """Gets the _date of this StatusUpdateClaimItem.


        :return: The _date of this StatusUpdateClaimItem.
        :rtype: datetime
        """
        return self.__date

    @_date.setter
    def _date(self, _date: datetime):
        """Sets the _date of this StatusUpdateClaimItem.


        :param _date: The _date of this StatusUpdateClaimItem.
        :type _date: datetime
        """

        self.__date = _date

    @property
    def notes(self) -> str:
        """Gets the notes of this StatusUpdateClaimItem.


        :return: The notes of this StatusUpdateClaimItem.
        :rtype: str
        """
        return self._notes

    @notes.setter
    def notes(self, notes: str):
        """Sets the notes of this StatusUpdateClaimItem.


        :param notes: The notes of this StatusUpdateClaimItem.
        :type notes: str
        """

        self._notes = notes
