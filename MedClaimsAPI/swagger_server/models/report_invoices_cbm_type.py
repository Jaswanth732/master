# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.report_invoices_cbm_type_invoice_list import ReportInvoicesCBMTypeInvoiceList  # noqa: F401,E501
from swagger_server import util


class ReportInvoicesCBMType(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, batch_id: str=None, invoice_list: ReportInvoicesCBMTypeInvoiceList=None):  # noqa: E501
        """ReportInvoicesCBMType - a model defined in Swagger

        :param batch_id: The batch_id of this ReportInvoicesCBMType.  # noqa: E501
        :type batch_id: str
        :param invoice_list: The invoice_list of this ReportInvoicesCBMType.  # noqa: E501
        :type invoice_list: ReportInvoicesCBMTypeInvoiceList
        """
        self.swagger_types = {
            'batch_id': str,
            'invoice_list': ReportInvoicesCBMTypeInvoiceList
        }

        self.attribute_map = {
            'batch_id': 'batchId',
            'invoice_list': 'invoiceList'
        }
        self._batch_id = batch_id
        self._invoice_list = invoice_list

    @classmethod
    def from_dict(cls, dikt) -> 'ReportInvoicesCBMType':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ReportInvoicesCBMType of this ReportInvoicesCBMType.  # noqa: E501
        :rtype: ReportInvoicesCBMType
        """
        return util.deserialize_model(dikt, cls)

    @property
    def batch_id(self) -> str:
        """Gets the batch_id of this ReportInvoicesCBMType.


        :return: The batch_id of this ReportInvoicesCBMType.
        :rtype: str
        """
        return self._batch_id

    @batch_id.setter
    def batch_id(self, batch_id: str):
        """Sets the batch_id of this ReportInvoicesCBMType.


        :param batch_id: The batch_id of this ReportInvoicesCBMType.
        :type batch_id: str
        """

        self._batch_id = batch_id

    @property
    def invoice_list(self) -> ReportInvoicesCBMTypeInvoiceList:
        """Gets the invoice_list of this ReportInvoicesCBMType.


        :return: The invoice_list of this ReportInvoicesCBMType.
        :rtype: ReportInvoicesCBMTypeInvoiceList
        """
        return self._invoice_list

    @invoice_list.setter
    def invoice_list(self, invoice_list: ReportInvoicesCBMTypeInvoiceList):
        """Sets the invoice_list of this ReportInvoicesCBMType.


        :param invoice_list: The invoice_list of this ReportInvoicesCBMType.
        :type invoice_list: ReportInvoicesCBMTypeInvoiceList
        """

        self._invoice_list = invoice_list
