# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class HistoryModificationType(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, status_id: str=None, note: str=None, _date: datetime=None, user_id: str=None):  # noqa: E501
        """HistoryModificationType - a model defined in Swagger

        :param status_id: The status_id of this HistoryModificationType.  # noqa: E501
        :type status_id: str
        :param note: The note of this HistoryModificationType.  # noqa: E501
        :type note: str
        :param _date: The _date of this HistoryModificationType.  # noqa: E501
        :type _date: datetime
        :param user_id: The user_id of this HistoryModificationType.  # noqa: E501
        :type user_id: str
        """
        self.swagger_types = {
            'status_id': str,
            'note': str,
            '_date': datetime,
            'user_id': str
        }

        self.attribute_map = {
            'status_id': 'statusId',
            'note': 'note',
            '_date': 'date',
            'user_id': 'userId'
        }
        self._status_id = status_id
        self._note = note
        self.__date = _date
        self._user_id = user_id

    @classmethod
    def from_dict(cls, dikt) -> 'HistoryModificationType':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The HistoryModificationType of this HistoryModificationType.  # noqa: E501
        :rtype: HistoryModificationType
        """
        return util.deserialize_model(dikt, cls)

    @property
    def status_id(self) -> str:
        """Gets the status_id of this HistoryModificationType.


        :return: The status_id of this HistoryModificationType.
        :rtype: str
        """
        return self._status_id

    @status_id.setter
    def status_id(self, status_id: str):
        """Sets the status_id of this HistoryModificationType.


        :param status_id: The status_id of this HistoryModificationType.
        :type status_id: str
        """

        self._status_id = status_id

    @property
    def note(self) -> str:
        """Gets the note of this HistoryModificationType.


        :return: The note of this HistoryModificationType.
        :rtype: str
        """
        return self._note

    @note.setter
    def note(self, note: str):
        """Sets the note of this HistoryModificationType.


        :param note: The note of this HistoryModificationType.
        :type note: str
        """

        self._note = note

    @property
    def _date(self) -> datetime:
        """Gets the _date of this HistoryModificationType.


        :return: The _date of this HistoryModificationType.
        :rtype: datetime
        """
        return self.__date

    @_date.setter
    def _date(self, _date: datetime):
        """Sets the _date of this HistoryModificationType.


        :param _date: The _date of this HistoryModificationType.
        :type _date: datetime
        """

        self.__date = _date

    @property
    def user_id(self) -> str:
        """Gets the user_id of this HistoryModificationType.


        :return: The user_id of this HistoryModificationType.
        :rtype: str
        """
        return self._user_id

    @user_id.setter
    def user_id(self, user_id: str):
        """Sets the user_id of this HistoryModificationType.


        :param user_id: The user_id of this HistoryModificationType.
        :type user_id: str
        """

        self._user_id = user_id
