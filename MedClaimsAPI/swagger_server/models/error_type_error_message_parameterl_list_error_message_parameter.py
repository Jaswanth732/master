# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class ErrorTypeErrorMessageParameterlListErrorMessageParameter(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, param_key: str=None, param_value: str=None):  # noqa: E501
        """ErrorTypeErrorMessageParameterlListErrorMessageParameter - a model defined in Swagger

        :param param_key: The param_key of this ErrorTypeErrorMessageParameterlListErrorMessageParameter.  # noqa: E501
        :type param_key: str
        :param param_value: The param_value of this ErrorTypeErrorMessageParameterlListErrorMessageParameter.  # noqa: E501
        :type param_value: str
        """
        self.swagger_types = {
            'param_key': str,
            'param_value': str
        }

        self.attribute_map = {
            'param_key': 'paramKey',
            'param_value': 'paramValue'
        }
        self._param_key = param_key
        self._param_value = param_value

    @classmethod
    def from_dict(cls, dikt) -> 'ErrorTypeErrorMessageParameterlListErrorMessageParameter':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ErrorType_errorMessageParameterlList_errorMessageParameter of this ErrorTypeErrorMessageParameterlListErrorMessageParameter.  # noqa: E501
        :rtype: ErrorTypeErrorMessageParameterlListErrorMessageParameter
        """
        return util.deserialize_model(dikt, cls)

    @property
    def param_key(self) -> str:
        """Gets the param_key of this ErrorTypeErrorMessageParameterlListErrorMessageParameter.


        :return: The param_key of this ErrorTypeErrorMessageParameterlListErrorMessageParameter.
        :rtype: str
        """
        return self._param_key

    @param_key.setter
    def param_key(self, param_key: str):
        """Sets the param_key of this ErrorTypeErrorMessageParameterlListErrorMessageParameter.


        :param param_key: The param_key of this ErrorTypeErrorMessageParameterlListErrorMessageParameter.
        :type param_key: str
        """
        if param_key is None:
            raise ValueError("Invalid value for `param_key`, must not be `None`")  # noqa: E501

        self._param_key = param_key

    @property
    def param_value(self) -> str:
        """Gets the param_value of this ErrorTypeErrorMessageParameterlListErrorMessageParameter.


        :return: The param_value of this ErrorTypeErrorMessageParameterlListErrorMessageParameter.
        :rtype: str
        """
        return self._param_value

    @param_value.setter
    def param_value(self, param_value: str):
        """Sets the param_value of this ErrorTypeErrorMessageParameterlListErrorMessageParameter.


        :param param_value: The param_value of this ErrorTypeErrorMessageParameterlListErrorMessageParameter.
        :type param_value: str
        """
        if param_value is None:
            raise ValueError("Invalid value for `param_value`, must not be `None`")  # noqa: E501

        self._param_value = param_value
