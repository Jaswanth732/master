# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.case_custom_type import CaseCustomType  # noqa: F401,E501
from swagger_server import util


class CaseInfoType(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, case_nbr: int=None, member_nbr: int=None, case_category_id: str=None, case_status_id: str=None, custom: CaseCustomType=None):  # noqa: E501
        """CaseInfoType - a model defined in Swagger

        :param case_nbr: The case_nbr of this CaseInfoType.  # noqa: E501
        :type case_nbr: int
        :param member_nbr: The member_nbr of this CaseInfoType.  # noqa: E501
        :type member_nbr: int
        :param case_category_id: The case_category_id of this CaseInfoType.  # noqa: E501
        :type case_category_id: str
        :param case_status_id: The case_status_id of this CaseInfoType.  # noqa: E501
        :type case_status_id: str
        :param custom: The custom of this CaseInfoType.  # noqa: E501
        :type custom: CaseCustomType
        """
        self.swagger_types = {
            'case_nbr': int,
            'member_nbr': int,
            'case_category_id': str,
            'case_status_id': str,
            'custom': CaseCustomType
        }

        self.attribute_map = {
            'case_nbr': 'caseNbr',
            'member_nbr': 'memberNbr',
            'case_category_id': 'caseCategoryId',
            'case_status_id': 'caseStatusId',
            'custom': 'custom'
        }
        self._case_nbr = case_nbr
        self._member_nbr = member_nbr
        self._case_category_id = case_category_id
        self._case_status_id = case_status_id
        self._custom = custom

    @classmethod
    def from_dict(cls, dikt) -> 'CaseInfoType':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The CaseInfoType of this CaseInfoType.  # noqa: E501
        :rtype: CaseInfoType
        """
        return util.deserialize_model(dikt, cls)

    @property
    def case_nbr(self) -> int:
        """Gets the case_nbr of this CaseInfoType.


        :return: The case_nbr of this CaseInfoType.
        :rtype: int
        """
        return self._case_nbr

    @case_nbr.setter
    def case_nbr(self, case_nbr: int):
        """Sets the case_nbr of this CaseInfoType.


        :param case_nbr: The case_nbr of this CaseInfoType.
        :type case_nbr: int
        """

        self._case_nbr = case_nbr

    @property
    def member_nbr(self) -> int:
        """Gets the member_nbr of this CaseInfoType.


        :return: The member_nbr of this CaseInfoType.
        :rtype: int
        """
        return self._member_nbr

    @member_nbr.setter
    def member_nbr(self, member_nbr: int):
        """Sets the member_nbr of this CaseInfoType.


        :param member_nbr: The member_nbr of this CaseInfoType.
        :type member_nbr: int
        """

        self._member_nbr = member_nbr

    @property
    def case_category_id(self) -> str:
        """Gets the case_category_id of this CaseInfoType.


        :return: The case_category_id of this CaseInfoType.
        :rtype: str
        """
        return self._case_category_id

    @case_category_id.setter
    def case_category_id(self, case_category_id: str):
        """Sets the case_category_id of this CaseInfoType.


        :param case_category_id: The case_category_id of this CaseInfoType.
        :type case_category_id: str
        """

        self._case_category_id = case_category_id

    @property
    def case_status_id(self) -> str:
        """Gets the case_status_id of this CaseInfoType.


        :return: The case_status_id of this CaseInfoType.
        :rtype: str
        """
        return self._case_status_id

    @case_status_id.setter
    def case_status_id(self, case_status_id: str):
        """Sets the case_status_id of this CaseInfoType.


        :param case_status_id: The case_status_id of this CaseInfoType.
        :type case_status_id: str
        """

        self._case_status_id = case_status_id

    @property
    def custom(self) -> CaseCustomType:
        """Gets the custom of this CaseInfoType.


        :return: The custom of this CaseInfoType.
        :rtype: CaseCustomType
        """
        return self._custom

    @custom.setter
    def custom(self, custom: CaseCustomType):
        """Sets the custom of this CaseInfoType.


        :param custom: The custom of this CaseInfoType.
        :type custom: CaseCustomType
        """

        self._custom = custom
