# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class PerformInvoiceReportDataAreaType(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, queue_id: str=None):  # noqa: E501
        """PerformInvoiceReportDataAreaType - a model defined in Swagger

        :param queue_id: The queue_id of this PerformInvoiceReportDataAreaType.  # noqa: E501
        :type queue_id: str
        """
        self.swagger_types = {
            'queue_id': str
        }

        self.attribute_map = {
            'queue_id': 'queueId'
        }
        self._queue_id = queue_id

    @classmethod
    def from_dict(cls, dikt) -> 'PerformInvoiceReportDataAreaType':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The PerformInvoiceReportDataAreaType of this PerformInvoiceReportDataAreaType.  # noqa: E501
        :rtype: PerformInvoiceReportDataAreaType
        """
        return util.deserialize_model(dikt, cls)

    @property
    def queue_id(self) -> str:
        """Gets the queue_id of this PerformInvoiceReportDataAreaType.


        :return: The queue_id of this PerformInvoiceReportDataAreaType.
        :rtype: str
        """
        return self._queue_id

    @queue_id.setter
    def queue_id(self, queue_id: str):
        """Sets the queue_id of this PerformInvoiceReportDataAreaType.


        :param queue_id: The queue_id of this PerformInvoiceReportDataAreaType.
        :type queue_id: str
        """
        if queue_id is None:
            raise ValueError("Invalid value for `queue_id`, must not be `None`")  # noqa: E501

        self._queue_id = queue_id
