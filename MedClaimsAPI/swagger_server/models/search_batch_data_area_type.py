# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.batch_submission_method_type import BatchSubmissionMethodType  # noqa: F401,E501
from swagger_server.models.paging_type import PagingType  # noqa: F401,E501
from swagger_server import util


class SearchBatchDataAreaType(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, paging: PagingType=None, submission_method: BatchSubmissionMethodType=None, payment_date: datetime=None, received_date: datetime=None, submitted_by: str=None, submitted_type: str=None, external_batch_ref_id: str=None, batch_id: int=None):  # noqa: E501
        """SearchBatchDataAreaType - a model defined in Swagger

        :param paging: The paging of this SearchBatchDataAreaType.  # noqa: E501
        :type paging: PagingType
        :param submission_method: The submission_method of this SearchBatchDataAreaType.  # noqa: E501
        :type submission_method: BatchSubmissionMethodType
        :param payment_date: The payment_date of this SearchBatchDataAreaType.  # noqa: E501
        :type payment_date: datetime
        :param received_date: The received_date of this SearchBatchDataAreaType.  # noqa: E501
        :type received_date: datetime
        :param submitted_by: The submitted_by of this SearchBatchDataAreaType.  # noqa: E501
        :type submitted_by: str
        :param submitted_type: The submitted_type of this SearchBatchDataAreaType.  # noqa: E501
        :type submitted_type: str
        :param external_batch_ref_id: The external_batch_ref_id of this SearchBatchDataAreaType.  # noqa: E501
        :type external_batch_ref_id: str
        :param batch_id: The batch_id of this SearchBatchDataAreaType.  # noqa: E501
        :type batch_id: int
        """
        self.swagger_types = {
            'paging': PagingType,
            'submission_method': BatchSubmissionMethodType,
            'payment_date': datetime,
            'received_date': datetime,
            'submitted_by': str,
            'submitted_type': str,
            'external_batch_ref_id': str,
            'batch_id': int
        }

        self.attribute_map = {
            'paging': 'paging',
            'submission_method': 'submissionMethod',
            'payment_date': 'paymentDate',
            'received_date': 'receivedDate',
            'submitted_by': 'submittedBy',
            'submitted_type': 'submittedType',
            'external_batch_ref_id': 'externalBatchRefId',
            'batch_id': 'batchId'
        }
        self._paging = paging
        self._submission_method = submission_method
        self._payment_date = payment_date
        self._received_date = received_date
        self._submitted_by = submitted_by
        self._submitted_type = submitted_type
        self._external_batch_ref_id = external_batch_ref_id
        self._batch_id = batch_id

    @classmethod
    def from_dict(cls, dikt) -> 'SearchBatchDataAreaType':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The SearchBatchDataAreaType of this SearchBatchDataAreaType.  # noqa: E501
        :rtype: SearchBatchDataAreaType
        """
        return util.deserialize_model(dikt, cls)

    @property
    def paging(self) -> PagingType:
        """Gets the paging of this SearchBatchDataAreaType.


        :return: The paging of this SearchBatchDataAreaType.
        :rtype: PagingType
        """
        return self._paging

    @paging.setter
    def paging(self, paging: PagingType):
        """Sets the paging of this SearchBatchDataAreaType.


        :param paging: The paging of this SearchBatchDataAreaType.
        :type paging: PagingType
        """

        self._paging = paging

    @property
    def submission_method(self) -> BatchSubmissionMethodType:
        """Gets the submission_method of this SearchBatchDataAreaType.


        :return: The submission_method of this SearchBatchDataAreaType.
        :rtype: BatchSubmissionMethodType
        """
        return self._submission_method

    @submission_method.setter
    def submission_method(self, submission_method: BatchSubmissionMethodType):
        """Sets the submission_method of this SearchBatchDataAreaType.


        :param submission_method: The submission_method of this SearchBatchDataAreaType.
        :type submission_method: BatchSubmissionMethodType
        """

        self._submission_method = submission_method

    @property
    def payment_date(self) -> datetime:
        """Gets the payment_date of this SearchBatchDataAreaType.


        :return: The payment_date of this SearchBatchDataAreaType.
        :rtype: datetime
        """
        return self._payment_date

    @payment_date.setter
    def payment_date(self, payment_date: datetime):
        """Sets the payment_date of this SearchBatchDataAreaType.


        :param payment_date: The payment_date of this SearchBatchDataAreaType.
        :type payment_date: datetime
        """

        self._payment_date = payment_date

    @property
    def received_date(self) -> datetime:
        """Gets the received_date of this SearchBatchDataAreaType.


        :return: The received_date of this SearchBatchDataAreaType.
        :rtype: datetime
        """
        return self._received_date

    @received_date.setter
    def received_date(self, received_date: datetime):
        """Sets the received_date of this SearchBatchDataAreaType.


        :param received_date: The received_date of this SearchBatchDataAreaType.
        :type received_date: datetime
        """

        self._received_date = received_date

    @property
    def submitted_by(self) -> str:
        """Gets the submitted_by of this SearchBatchDataAreaType.


        :return: The submitted_by of this SearchBatchDataAreaType.
        :rtype: str
        """
        return self._submitted_by

    @submitted_by.setter
    def submitted_by(self, submitted_by: str):
        """Sets the submitted_by of this SearchBatchDataAreaType.


        :param submitted_by: The submitted_by of this SearchBatchDataAreaType.
        :type submitted_by: str
        """

        self._submitted_by = submitted_by

    @property
    def submitted_type(self) -> str:
        """Gets the submitted_type of this SearchBatchDataAreaType.


        :return: The submitted_type of this SearchBatchDataAreaType.
        :rtype: str
        """
        return self._submitted_type

    @submitted_type.setter
    def submitted_type(self, submitted_type: str):
        """Sets the submitted_type of this SearchBatchDataAreaType.


        :param submitted_type: The submitted_type of this SearchBatchDataAreaType.
        :type submitted_type: str
        """

        self._submitted_type = submitted_type

    @property
    def external_batch_ref_id(self) -> str:
        """Gets the external_batch_ref_id of this SearchBatchDataAreaType.


        :return: The external_batch_ref_id of this SearchBatchDataAreaType.
        :rtype: str
        """
        return self._external_batch_ref_id

    @external_batch_ref_id.setter
    def external_batch_ref_id(self, external_batch_ref_id: str):
        """Sets the external_batch_ref_id of this SearchBatchDataAreaType.


        :param external_batch_ref_id: The external_batch_ref_id of this SearchBatchDataAreaType.
        :type external_batch_ref_id: str
        """

        self._external_batch_ref_id = external_batch_ref_id

    @property
    def batch_id(self) -> int:
        """Gets the batch_id of this SearchBatchDataAreaType.


        :return: The batch_id of this SearchBatchDataAreaType.
        :rtype: int
        """
        return self._batch_id

    @batch_id.setter
    def batch_id(self, batch_id: int):
        """Sets the batch_id of this SearchBatchDataAreaType.


        :param batch_id: The batch_id of this SearchBatchDataAreaType.
        :type batch_id: int
        """

        self._batch_id = batch_id
