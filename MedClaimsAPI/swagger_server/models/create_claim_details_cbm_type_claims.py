# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.claim_type import ClaimType  # noqa: F401,E501
from swagger_server import util


class CreateClaimDetailsCBMTypeClaims(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, claim: List[ClaimType]=None):  # noqa: E501
        """CreateClaimDetailsCBMTypeClaims - a model defined in Swagger

        :param claim: The claim of this CreateClaimDetailsCBMTypeClaims.  # noqa: E501
        :type claim: List[ClaimType]
        """
        self.swagger_types = {
            'claim': List[ClaimType]
        }

        self.attribute_map = {
            'claim': 'claim'
        }
        self._claim = claim

    @classmethod
    def from_dict(cls, dikt) -> 'CreateClaimDetailsCBMTypeClaims':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The CreateClaimDetailsCBMType_claims of this CreateClaimDetailsCBMTypeClaims.  # noqa: E501
        :rtype: CreateClaimDetailsCBMTypeClaims
        """
        return util.deserialize_model(dikt, cls)

    @property
    def claim(self) -> List[ClaimType]:
        """Gets the claim of this CreateClaimDetailsCBMTypeClaims.


        :return: The claim of this CreateClaimDetailsCBMTypeClaims.
        :rtype: List[ClaimType]
        """
        return self._claim

    @claim.setter
    def claim(self, claim: List[ClaimType]):
        """Sets the claim of this CreateClaimDetailsCBMTypeClaims.


        :param claim: The claim of this CreateClaimDetailsCBMTypeClaims.
        :type claim: List[ClaimType]
        """
        if claim is None:
            raise ValueError("Invalid value for `claim`, must not be `None`")  # noqa: E501

        self._claim = claim
