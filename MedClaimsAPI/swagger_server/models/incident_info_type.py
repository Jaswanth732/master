# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.case_info_type import CaseInfoType  # noqa: F401,E501
from swagger_server.models.incident_custom_type import IncidentCustomType  # noqa: F401,E501
from swagger_server.models.incident_info_type_diagnoses import IncidentInfoTypeDiagnoses  # noqa: F401,E501
from swagger_server.models.incident_type import IncidentType  # noqa: F401,E501
from swagger_server.models.incident_type_info import IncidentTypeInfo  # noqa: F401,E501
from swagger_server import util


class IncidentInfoType(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, incident_nbr: int=None, member_nbr: int=None, policy_nbr: int=None, incident_category_id: IncidentType=None, provider_id: str=None, incident_type_info: IncidentTypeInfo=None, incident_status_id: str=None, diagnoses: IncidentInfoTypeDiagnoses=None, case: CaseInfoType=None, custom: IncidentCustomType=None):  # noqa: E501
        """IncidentInfoType - a model defined in Swagger

        :param incident_nbr: The incident_nbr of this IncidentInfoType.  # noqa: E501
        :type incident_nbr: int
        :param member_nbr: The member_nbr of this IncidentInfoType.  # noqa: E501
        :type member_nbr: int
        :param policy_nbr: The policy_nbr of this IncidentInfoType.  # noqa: E501
        :type policy_nbr: int
        :param incident_category_id: The incident_category_id of this IncidentInfoType.  # noqa: E501
        :type incident_category_id: IncidentType
        :param provider_id: The provider_id of this IncidentInfoType.  # noqa: E501
        :type provider_id: str
        :param incident_type_info: The incident_type_info of this IncidentInfoType.  # noqa: E501
        :type incident_type_info: IncidentTypeInfo
        :param incident_status_id: The incident_status_id of this IncidentInfoType.  # noqa: E501
        :type incident_status_id: str
        :param diagnoses: The diagnoses of this IncidentInfoType.  # noqa: E501
        :type diagnoses: IncidentInfoTypeDiagnoses
        :param case: The case of this IncidentInfoType.  # noqa: E501
        :type case: CaseInfoType
        :param custom: The custom of this IncidentInfoType.  # noqa: E501
        :type custom: IncidentCustomType
        """
        self.swagger_types = {
            'incident_nbr': int,
            'member_nbr': int,
            'policy_nbr': int,
            'incident_category_id': IncidentType,
            'provider_id': str,
            'incident_type_info': IncidentTypeInfo,
            'incident_status_id': str,
            'diagnoses': IncidentInfoTypeDiagnoses,
            'case': CaseInfoType,
            'custom': IncidentCustomType
        }

        self.attribute_map = {
            'incident_nbr': 'incidentNbr',
            'member_nbr': 'memberNbr',
            'policy_nbr': 'policyNbr',
            'incident_category_id': 'incidentCategoryId',
            'provider_id': 'providerId',
            'incident_type_info': 'IncidentTypeInfo',
            'incident_status_id': 'incidentStatusId',
            'diagnoses': 'diagnoses',
            'case': 'case',
            'custom': 'custom'
        }
        self._incident_nbr = incident_nbr
        self._member_nbr = member_nbr
        self._policy_nbr = policy_nbr
        self._incident_category_id = incident_category_id
        self._provider_id = provider_id
        self._incident_type_info = incident_type_info
        self._incident_status_id = incident_status_id
        self._diagnoses = diagnoses
        self._case = case
        self._custom = custom

    @classmethod
    def from_dict(cls, dikt) -> 'IncidentInfoType':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The IncidentInfoType of this IncidentInfoType.  # noqa: E501
        :rtype: IncidentInfoType
        """
        return util.deserialize_model(dikt, cls)

    @property
    def incident_nbr(self) -> int:
        """Gets the incident_nbr of this IncidentInfoType.


        :return: The incident_nbr of this IncidentInfoType.
        :rtype: int
        """
        return self._incident_nbr

    @incident_nbr.setter
    def incident_nbr(self, incident_nbr: int):
        """Sets the incident_nbr of this IncidentInfoType.


        :param incident_nbr: The incident_nbr of this IncidentInfoType.
        :type incident_nbr: int
        """

        self._incident_nbr = incident_nbr

    @property
    def member_nbr(self) -> int:
        """Gets the member_nbr of this IncidentInfoType.


        :return: The member_nbr of this IncidentInfoType.
        :rtype: int
        """
        return self._member_nbr

    @member_nbr.setter
    def member_nbr(self, member_nbr: int):
        """Sets the member_nbr of this IncidentInfoType.


        :param member_nbr: The member_nbr of this IncidentInfoType.
        :type member_nbr: int
        """

        self._member_nbr = member_nbr

    @property
    def policy_nbr(self) -> int:
        """Gets the policy_nbr of this IncidentInfoType.


        :return: The policy_nbr of this IncidentInfoType.
        :rtype: int
        """
        return self._policy_nbr

    @policy_nbr.setter
    def policy_nbr(self, policy_nbr: int):
        """Sets the policy_nbr of this IncidentInfoType.


        :param policy_nbr: The policy_nbr of this IncidentInfoType.
        :type policy_nbr: int
        """

        self._policy_nbr = policy_nbr

    @property
    def incident_category_id(self) -> IncidentType:
        """Gets the incident_category_id of this IncidentInfoType.


        :return: The incident_category_id of this IncidentInfoType.
        :rtype: IncidentType
        """
        return self._incident_category_id

    @incident_category_id.setter
    def incident_category_id(self, incident_category_id: IncidentType):
        """Sets the incident_category_id of this IncidentInfoType.


        :param incident_category_id: The incident_category_id of this IncidentInfoType.
        :type incident_category_id: IncidentType
        """

        self._incident_category_id = incident_category_id

    @property
    def provider_id(self) -> str:
        """Gets the provider_id of this IncidentInfoType.


        :return: The provider_id of this IncidentInfoType.
        :rtype: str
        """
        return self._provider_id

    @provider_id.setter
    def provider_id(self, provider_id: str):
        """Sets the provider_id of this IncidentInfoType.


        :param provider_id: The provider_id of this IncidentInfoType.
        :type provider_id: str
        """

        self._provider_id = provider_id

    @property
    def incident_type_info(self) -> IncidentTypeInfo:
        """Gets the incident_type_info of this IncidentInfoType.


        :return: The incident_type_info of this IncidentInfoType.
        :rtype: IncidentTypeInfo
        """
        return self._incident_type_info

    @incident_type_info.setter
    def incident_type_info(self, incident_type_info: IncidentTypeInfo):
        """Sets the incident_type_info of this IncidentInfoType.


        :param incident_type_info: The incident_type_info of this IncidentInfoType.
        :type incident_type_info: IncidentTypeInfo
        """

        self._incident_type_info = incident_type_info

    @property
    def incident_status_id(self) -> str:
        """Gets the incident_status_id of this IncidentInfoType.


        :return: The incident_status_id of this IncidentInfoType.
        :rtype: str
        """
        return self._incident_status_id

    @incident_status_id.setter
    def incident_status_id(self, incident_status_id: str):
        """Sets the incident_status_id of this IncidentInfoType.


        :param incident_status_id: The incident_status_id of this IncidentInfoType.
        :type incident_status_id: str
        """

        self._incident_status_id = incident_status_id

    @property
    def diagnoses(self) -> IncidentInfoTypeDiagnoses:
        """Gets the diagnoses of this IncidentInfoType.


        :return: The diagnoses of this IncidentInfoType.
        :rtype: IncidentInfoTypeDiagnoses
        """
        return self._diagnoses

    @diagnoses.setter
    def diagnoses(self, diagnoses: IncidentInfoTypeDiagnoses):
        """Sets the diagnoses of this IncidentInfoType.


        :param diagnoses: The diagnoses of this IncidentInfoType.
        :type diagnoses: IncidentInfoTypeDiagnoses
        """

        self._diagnoses = diagnoses

    @property
    def case(self) -> CaseInfoType:
        """Gets the case of this IncidentInfoType.


        :return: The case of this IncidentInfoType.
        :rtype: CaseInfoType
        """
        return self._case

    @case.setter
    def case(self, case: CaseInfoType):
        """Sets the case of this IncidentInfoType.


        :param case: The case of this IncidentInfoType.
        :type case: CaseInfoType
        """

        self._case = case

    @property
    def custom(self) -> IncidentCustomType:
        """Gets the custom of this IncidentInfoType.


        :return: The custom of this IncidentInfoType.
        :rtype: IncidentCustomType
        """
        return self._custom

    @custom.setter
    def custom(self, custom: IncidentCustomType):
        """Sets the custom of this IncidentInfoType.


        :param custom: The custom of this IncidentInfoType.
        :type custom: IncidentCustomType
        """

        self._custom = custom
