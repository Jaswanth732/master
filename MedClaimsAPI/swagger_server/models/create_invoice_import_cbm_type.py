# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.invoice_import_request_type import InvoiceImportRequestType  # noqa: F401,E501
from swagger_server import util


class CreateInvoiceImportCBMType(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, invoice_import: InvoiceImportRequestType=None):  # noqa: E501
        """CreateInvoiceImportCBMType - a model defined in Swagger

        :param invoice_import: The invoice_import of this CreateInvoiceImportCBMType.  # noqa: E501
        :type invoice_import: InvoiceImportRequestType
        """
        self.swagger_types = {
            'invoice_import': InvoiceImportRequestType
        }

        self.attribute_map = {
            'invoice_import': 'invoiceImport'
        }
        self._invoice_import = invoice_import

    @classmethod
    def from_dict(cls, dikt) -> 'CreateInvoiceImportCBMType':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The CreateInvoiceImportCBMType of this CreateInvoiceImportCBMType.  # noqa: E501
        :rtype: CreateInvoiceImportCBMType
        """
        return util.deserialize_model(dikt, cls)

    @property
    def invoice_import(self) -> InvoiceImportRequestType:
        """Gets the invoice_import of this CreateInvoiceImportCBMType.


        :return: The invoice_import of this CreateInvoiceImportCBMType.
        :rtype: InvoiceImportRequestType
        """
        return self._invoice_import

    @invoice_import.setter
    def invoice_import(self, invoice_import: InvoiceImportRequestType):
        """Sets the invoice_import of this CreateInvoiceImportCBMType.


        :param invoice_import: The invoice_import of this CreateInvoiceImportCBMType.
        :type invoice_import: InvoiceImportRequestType
        """
        if invoice_import is None:
            raise ValueError("Invalid value for `invoice_import`, must not be `None`")  # noqa: E501

        self._invoice_import = invoice_import
