# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.error400_info_type import Error400InfoType  # noqa: F401,E501
from swagger_server import util


class InlineResponse400(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, error400: Error400InfoType=None):  # noqa: E501
        """InlineResponse400 - a model defined in Swagger

        :param error400: The error400 of this InlineResponse400.  # noqa: E501
        :type error400: Error400InfoType
        """
        self.swagger_types = {
            'error400': Error400InfoType
        }

        self.attribute_map = {
            'error400': 'error400'
        }
        self._error400 = error400

    @classmethod
    def from_dict(cls, dikt) -> 'InlineResponse400':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The inline_response_400 of this InlineResponse400.  # noqa: E501
        :rtype: InlineResponse400
        """
        return util.deserialize_model(dikt, cls)

    @property
    def error400(self) -> Error400InfoType:
        """Gets the error400 of this InlineResponse400.


        :return: The error400 of this InlineResponse400.
        :rtype: Error400InfoType
        """
        return self._error400

    @error400.setter
    def error400(self, error400: Error400InfoType):
        """Sets the error400 of this InlineResponse400.


        :param error400: The error400 of this InlineResponse400.
        :type error400: Error400InfoType
        """
        if error400 is None:
            raise ValueError("Invalid value for `error400`, must not be `None`")  # noqa: E501

        self._error400 = error400
