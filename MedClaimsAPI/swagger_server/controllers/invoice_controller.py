import connexion
import six

from swagger_server.models.cancel_invoice_cbm_type import CancelInvoiceCBMType  # noqa: E501
from swagger_server.models.cancel_invoice_response_cbm_type import CancelInvoiceResponseCBMType  # noqa: E501
from swagger_server.models.correct_invoice_cbm_type import CorrectInvoiceCBMType  # noqa: E501
from swagger_server.models.create_invoice_cbm_type import CreateInvoiceCBMType  # noqa: E501
from swagger_server.models.create_invoice_response_cbm_type import CreateInvoiceResponseCBMType  # noqa: E501
from swagger_server.models.inline_response400 import InlineResponse400  # noqa: E501
from swagger_server.models.inline_response404 import InlineResponse404  # noqa: E501
from swagger_server.models.search_invoice_response_cbm_type import SearchInvoiceResponseCBMType  # noqa: E501
from swagger_server.models.search_invoice_transaction_response_cbm_type import SearchInvoiceTransactionResponseCBMType  # noqa: E501
from swagger_server import util


def cancel_invoice(body=None):  # noqa: E501
    """Cancel Invoice

    &lt;h3&gt;Purpose&lt;/h3&gt; To provide the API consumer with the ability to cancel, with a single API call, one or more invoices that meet specific conditions.  &lt;h3&gt;Service Flow Description&lt;/h3&gt; &lt;p&gt;The Cancel Invoice service logic is &lt;/p&gt; &lt;ul&gt;  &lt;li&gt;An API Consumer invokes a service providing at least one invoice number&lt;br/&gt;   &lt;br/&gt;  &lt;/li&gt;  &lt;li&gt;   &lt;span style&#x3D;\&quot;color: rgb(0,0,0);\&quot;&gt;    &lt;span style&#x3D;\&quot;color: rgb(0,0,0);\&quot;&gt;     &lt;strong&gt;      &lt;strong&gt;Validate Cancel Invoice Message Structure:&lt;/strong&gt;     &lt;/strong&gt;The Cancel Invoice object will be validated if it is schemantically correct&lt;/span&gt;   &lt;/span&gt;   &lt;ul&gt;    &lt;li&gt;If the validation fails, an &lt;em&gt;HTTP 400 - Bad request&lt;/em&gt; error will be propagated to the caller along with an  message&lt;/li&gt;   &lt;/ul&gt;   &lt;p&gt;    &lt;br/&gt;   &lt;/p&gt;  &lt;/li&gt;  &lt;li&gt;   &lt;strong&gt;Create Queue Item for each invoice number&lt;em&gt; &lt;/em&gt; :&lt;/strong&gt;   &lt;em&gt; &lt;/em&gt;A new Queue Item will be created to handle the asynchronous cancel invoice process. Service&lt;em&gt;    &lt;em&gt;QueueAPIServices.create &lt;/em&gt;   &lt;/em&gt;will be used and will reply with a Queue Item. Each queue item will be consumed by ClaimAPIServices.PerformCancelInvoiceBPS   &lt;em&gt;    &lt;br/&gt;   &lt;/em&gt;   &lt;ul&gt;    &lt;li&gt;     &lt;span style&#x3D;\&quot;color: rgb(0,0,0);\&quot;&gt;If the call fails, an &lt;/span&gt;     &lt;span style&#x3D;\&quot;color: rgb(0,0,0);\&quot;&gt;If the call fails, an &lt;/span&gt;     &lt;em&gt;HTTP 400 - Bad request&lt;/em&gt;     &lt;span style&#x3D;\&quot;color: rgb(0,0,0);\&quot;&gt; error will be propagated to the caller along with an &lt;/span&gt;     &lt;a href&#x3D;\&quot;\&quot; rel&#x3D;\&quot;nofollow\&quot;&gt;      &lt;span style&#x3D;\&quot;color: rgb(0,0,0);\&quot;&gt;Error Information&lt;/span&gt;     &lt;/a&gt;     &lt;span style&#x3D;\&quot;color: rgb(0,0,0);\&quot;&gt; message&lt;/span&gt;    &lt;/li&gt;   &lt;/ul&gt;   &lt;span style&#x3D;\&quot;color: rgb(0,0,0);\&quot;&gt;    &lt;br/&gt;   &lt;/span&gt;  &lt;/li&gt;  &lt;li&gt;   &lt;span style&#x3D;\&quot;color: rgb(0,0,0);\&quot;&gt;A database poller will retrieve each created queue item and initiate a backend service (ClaimAPIServices.PerformCancelInvoiceBPS) to check if the invoice is eligible for cancellation and create a Cancel Invoice Task &lt;/span&gt;   &lt;br/&gt;   &lt;span style&#x3D;\&quot;color: rgb(0,0,0);\&quot;&gt;    &lt;br/&gt;   &lt;/span&gt;  &lt;/li&gt;  &lt;li&gt;   &lt;strong&gt;Reply :&lt;/strong&gt;The service will reply with the list of the queue items (One queue item per invoice).&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;  &lt;br/&gt; &lt;/p&gt;   ## &lt;p class&#x3D;\&quot;title\&quot;&gt;Asynchronous Processing&lt;/p&gt; &lt;span class&#x3D;\&quot;aui-icon aui-icon-small aui-iconfont-info confluence-information-macro-icon\&quot;&gt; &lt;/span&gt; &lt;div class&#x3D;\&quot;confluence-information-macro-body\&quot;&gt;  &lt;p&gt;An asynchronous service will process each invoice performing the following basic steps :&lt;/p&gt;  &lt;ul&gt;   &lt;ul&gt;    &lt;li&gt;     &lt;strong&gt;      &lt;strong&gt;       &lt;span style&#x3D;\&quot;color: rgb(0,0,0);\&quot;&gt;Check Invoice Cancellation Eligibility : &lt;/span&gt;      &lt;/strong&gt;     &lt;/strong&gt;     &lt;span style&#x3D;\&quot;color: rgb(0,0,0);\&quot;&gt;A set of eligibility checks are performed over the invoice&lt;/span&gt;     &lt;br /&gt;     &lt;ul&gt;      &lt;li&gt;       &lt;span style&#x3D;\&quot;color: rgb(0,0,0);\&quot;&gt;The invoice is eligible for cancellation if it meets the below conditions :&lt;/span&gt;       &lt;ul&gt;        &lt;li&gt;Invoice status is reported and has not been previously corrected or cancelled and&lt;ul&gt;          &lt;li&gt;There is no active resubmit invoice task linked to this invoice&lt;/li&gt;          &lt;li&gt;There is no active correct invoice task linked to this invoice.&lt;/li&gt;          &lt;li&gt;There is no active cancel invoice task linked to this invoice.&lt;/li&gt;          &lt;li&gt;The invoice is not a negative invoice resulted from a previous adjustment process&lt;/li&gt;         &lt;/ul&gt;        &lt;/li&gt;        &lt;li&gt;Invoice status is calculated and valid and has not been previously corrected or cancelled and&lt;ul&gt;          &lt;li&gt;the invoice is not linked to an active review task (technical review, medical review etc).&lt;/li&gt;          &lt;li&gt;invoice is not linked to an active correct invoice task&lt;/li&gt;          &lt;li&gt;invoice is not linked to an active resubmit invoice task.&lt;/li&gt;          &lt;li&gt;Invoice is not linked to a cancel invoice task.&lt;/li&gt;          &lt;li&gt;The invoice is not negative&lt;/li&gt;          &lt;li&gt;If the invoice is a pre-invoice it should not be linked to an invoice&lt;br /&gt;           &lt;br /&gt;          &lt;/li&gt;         &lt;/ul&gt;        &lt;/li&gt;       &lt;/ul&gt;      &lt;/li&gt;     &lt;/ul&gt;    &lt;/li&gt;    &lt;li&gt;     &lt;strong&gt;Is invoice eligible for cancellation - Yes&lt;/strong&gt; :&lt;ul&gt;      &lt;li&gt;       &lt;strong&gt;Cancel Invoice&lt;/strong&gt; : A service is called to cancel the invoice&lt;/li&gt;      &lt;li&gt;       &lt;strong&gt;If Invoice Original Status - Calculated &amp;amp; Valid&lt;/strong&gt; :&lt;ul&gt;        &lt;li&gt;         &lt;strong&gt;Update existing running business process&lt;/strong&gt;: The existing business process will be updated and milestone &amp;quot;Invoice Cancelled&amp;quot; will be achieved&lt;/li&gt;        &lt;li&gt;         &lt;strong&gt;Update Queue Item :&lt;/strong&gt; The Queue item will be updated with the following details:&lt;ul&gt;          &lt;li&gt;Status : &lt;em&gt;COMPLETED&lt;/em&gt;          &lt;/li&gt;          &lt;li&gt;Resource Id : &lt;em&gt;The cancelled invoice number&lt;/em&gt;          &lt;/li&gt;          &lt;li&gt;Info Code : &lt;em&gt;CLM.BUS.INFO.40051&lt;/em&gt;          &lt;/li&gt;          &lt;li&gt;Info Message : &lt;em&gt;Invoice {Invoice Number} successfully cancelled.&lt;/em&gt;          &lt;/li&gt;         &lt;/ul&gt;        &lt;/li&gt;       &lt;/ul&gt;      &lt;/li&gt;      &lt;li&gt;       &lt;strong&gt;If Invoice Original Status - Reported&lt;/strong&gt;:&lt;ul&gt;        &lt;li&gt;         &lt;strong&gt;Create new business process : &lt;/strong&gt;A new business process will be initiated and milestone &lt;span&gt;&amp;quot;Invoice Cancelled&amp;quot; will be achieved&lt;/span&gt;        &lt;/li&gt;        &lt;li&gt;         &lt;strong&gt;Updated Queue Item &lt;/strong&gt;: The Queue Item will be updated with the following details:&lt;br /&gt;         &lt;ul&gt;          &lt;li&gt;Status : &lt;em&gt;COMPLETED&lt;/em&gt;          &lt;/li&gt;          &lt;li&gt;Resource Id : &lt;em&gt;The newly created negative invoice as a result of the cancellation action&lt;/em&gt;          &lt;/li&gt;          &lt;li&gt;Info Code : &lt;em&gt;CLM.BUS.INFO.40052&lt;/em&gt;          &lt;/li&gt;          &lt;li&gt;Info Message : &lt;em&gt;Invoice {invoice Number} successfully cancelled. Negative invoice {negative Invoice Number} has been created&lt;/em&gt;.&lt;/li&gt;         &lt;/ul&gt;        &lt;/li&gt;       &lt;/ul&gt;      &lt;/li&gt;     &lt;/ul&gt;    &lt;/li&gt;    &lt;li&gt;     &lt;strong&gt;Is invoice eligible for cancellation - No&lt;/strong&gt;     &lt;span&gt;:&lt;/span&gt;     &lt;ul&gt;      &lt;li&gt;       &lt;strong&gt;Update Queue Item &lt;/strong&gt;: &lt;span&gt;The Queue Item will be updated with the following details:&lt;/span&gt;       &lt;ul&gt;        &lt;li&gt;         &lt;span&gt;Status : &lt;em&gt;ERROR&lt;/em&gt;         &lt;/span&gt;        &lt;/li&gt;        &lt;li&gt;Error Code : &lt;span&gt;APICLM.BUS.ERROR.00030&lt;/span&gt;        &lt;/li&gt;        &lt;li&gt;         &lt;span&gt;Error Message: &lt;span&gt;Invoice is not eligible for cancellation&lt;/span&gt;         &lt;/span&gt;        &lt;/li&gt;       &lt;/ul&gt;      &lt;/li&gt;     &lt;/ul&gt;    &lt;/li&gt;   &lt;/ul&gt;  &lt;/ul&gt; &lt;/div&gt; &lt;/div&gt; &lt;p&gt; # noqa: E501

    :param body: 
    :type body: dict | bytes

    :rtype: CancelInvoiceResponseCBMType
    """
    if connexion.request.is_json:
        body = CancelInvoiceCBMType.from_dict(connexion.request.get_json())  # noqa: E501
    return 'do some magic!'


def correct_invoice(body=None):  # noqa: E501
    """Correct Invoice

    &lt;h3&gt;Purpose&lt;/h3&gt;  To provide the user with the ability to correct an existing invoice in MedNeXt.   &lt;h3&gt;Service Flow Description&lt;/h3&gt; &lt;p&gt;&lt;strong&gt;Unsupported Updates&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;The following corrections on an existing invoice will not be supported by the Correct Invoice Service &lt;/p&gt; &lt;ul&gt;     &lt;li&gt;Changes on the invoice sub-entity ids meaning that :         &lt;ul&gt;             &lt;li&gt;If a sub-entity (eg. a Note) is provided with a Note ID which does not exist, the provided Note ID will be ignored and a new Note will be created in MedNeXt+ DB. A new Note ID wil be generated.&lt;/li&gt;             &lt;li&gt;Deletion of sub-entities: The absence of sub-entities from the service input, will not lead to their deletion. &lt;/li&gt;         &lt;/ul&gt;     &lt;/li&gt;     &lt;li&gt;         &lt;p&gt;Updates on one of the following ids will not be allowed. If the following values sent by the API Consumer differ from the ones stored in MedNeXt+ Database then the service will reply with an error&lt;/p&gt;         &lt;div class&#x3D;\&quot;table-wrap\&quot;&gt;             &lt;table class&#x3D;\&quot;wrapped confluenceTable\&quot;&gt;                 &lt;colgroup&gt;                     &lt;col/&gt;                     &lt;col/&gt;                 &lt;/colgroup&gt;                 &lt;tbody&gt;                     &lt;tr&gt;                         &lt;th class&#x3D;\&quot;confluenceTh\&quot;&gt;Entity&lt;/th&gt;                         &lt;th class&#x3D;\&quot;confluenceTh\&quot;&gt;Read Only attribute&lt;/th&gt;                     &lt;/tr&gt;                     &lt;tr&gt;                         &lt;td class&#x3D;\&quot;confluenceTd\&quot;&gt;Invoice&lt;/td&gt;                         &lt;td class&#x3D;\&quot;confluenceTd\&quot;&gt;&lt;span style&#x3D;\&quot;color: rgb(0,0,0);\&quot;&gt;Invoice Number&lt;/span&gt;&lt;/td&gt;                     &lt;/tr&gt;                     &lt;tr&gt;                         &lt;td colspan&#x3D;\&quot;1\&quot; class&#x3D;\&quot;confluenceTd\&quot;&gt;Invoice Exchange Rate&lt;/td&gt;                         &lt;td colspan&#x3D;\&quot;1\&quot; class&#x3D;\&quot;confluenceTd\&quot;&gt;Exchange Rate Number&lt;/td&gt;                     &lt;/tr&gt;                     &lt;tr&gt;                         &lt;td colspan&#x3D;\&quot;1\&quot; class&#x3D;\&quot;confluenceTd\&quot;&gt;&lt;span class&#x3D;\&quot;inline-comment-marker\&quot; data-ref&#x3D;\&quot;d34cc3dd-4211-43ae-a354-027a3c7697d3\&quot;&gt;Invoice Note&lt;/span&gt;&lt;/td&gt;                         &lt;td colspan&#x3D;\&quot;1\&quot; class&#x3D;\&quot;confluenceTd\&quot;&gt;Note Number&lt;/td&gt;                     &lt;/tr&gt;                     &lt;tr&gt;                         &lt;td class&#x3D;\&quot;confluenceTd\&quot;&gt;Invoice Line&lt;/td&gt;                         &lt;td colspan&#x3D;\&quot;1\&quot; class&#x3D;\&quot;confluenceTd\&quot;&gt;Line Number&lt;/td&gt;                     &lt;/tr&gt;                     &lt;tr&gt;                         &lt;td colspan&#x3D;\&quot;1\&quot; class&#x3D;\&quot;confluenceTd\&quot;&gt;Incident&lt;/td&gt;                         &lt;td colspan&#x3D;\&quot;1\&quot; class&#x3D;\&quot;confluenceTd\&quot;&gt;Incident Number&lt;/td&gt;                     &lt;/tr&gt;                     &lt;tr&gt;                         &lt;td colspan&#x3D;\&quot;1\&quot; class&#x3D;\&quot;confluenceTd\&quot;&gt;Incident Diagnosis&lt;/td&gt;                         &lt;td colspan&#x3D;\&quot;1\&quot; class&#x3D;\&quot;confluenceTd\&quot;&gt;Diagnosis Number&lt;/td&gt;                     &lt;/tr&gt;                     &lt;tr&gt;                         &lt;td colspan&#x3D;\&quot;1\&quot; class&#x3D;\&quot;confluenceTd\&quot;&gt;Case&lt;/td&gt;                         &lt;td colspan&#x3D;\&quot;1\&quot; class&#x3D;\&quot;confluenceTd\&quot;&gt;Case Number&lt;/td&gt;                     &lt;/tr&gt;                     &lt;tr&gt;                         &lt;td colspan&#x3D;\&quot;1\&quot; class&#x3D;\&quot;confluenceTd\&quot;&gt;Claim&lt;/td&gt;                         &lt;td colspan&#x3D;\&quot;1\&quot; class&#x3D;\&quot;confluenceTd\&quot;&gt;Claim Number&lt;/td&gt;                     &lt;/tr&gt;                     &lt;tr&gt;                         &lt;td colspan&#x3D;\&quot;1\&quot; class&#x3D;\&quot;confluenceTd\&quot;&gt;Custom Fields&lt;/td&gt;                         &lt;td colspan&#x3D;\&quot;1\&quot; class&#x3D;\&quot;confluenceTd\&quot;&gt;Field Number&lt;/td&gt;                     &lt;/tr&gt;                     &lt;tr&gt;                         &lt;td colspan&#x3D;\&quot;1\&quot; class&#x3D;\&quot;confluenceTd\&quot;&gt;Invoice Line Amount&lt;/td&gt;                         &lt;td colspan&#x3D;\&quot;1\&quot; class&#x3D;\&quot;confluenceTd\&quot;&gt;Amount Number&lt;/td&gt;                     &lt;/tr&gt;                 &lt;/tbody&gt;             &lt;/table&gt;         &lt;/div&gt;     &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;The Correct Invoice service logic is &lt;/p&gt; &lt;ul&gt;  &lt;li&gt;An API Consumer invokes a service providing an    &lt;a&gt;Invoice&lt;/a&gt; Object  &lt;/li&gt;  &lt;li&gt;   &lt;strong&gt;Validate Invoice Message Structure:&lt;/strong&gt; The    &lt;a &gt;Invoice&lt;/a&gt; object will be validated if it is schemantically correct   &lt;ul&gt;    &lt;li&gt;If the validation fails, an      &lt;em&gt;HTTP 400 - Bad request&lt;/em&gt; error will be propagated to the caller along with an      &lt;a &gt;Error Information&lt;/a&gt; message    &lt;/li&gt;   &lt;/ul&gt;  &lt;/li&gt; &lt;/ul&gt; &lt;ul&gt;  &lt;li&gt;   &lt;p&gt;    &lt;strong&gt;Retrieve Invoice From MedNeXt+ DB:  &lt;/strong&gt;Using the invoice number provided by the Invoice input Object , the Invoice object is retrieved from MedNeXt+DB   &lt;/p&gt;   &lt;ul&gt;    &lt;li&gt;     &lt;p&gt;If the Invoice entity is not found in the database an       &lt;em&gt;HTTP 404 - Not Found&lt;/em&gt; error will be propagated to the caller along with an       &lt;a&gt;Error Information&lt;/a&gt; message     &lt;/p&gt;     &lt;p&gt;      &lt;br/&gt;     &lt;/p&gt;    &lt;/li&gt;   &lt;/ul&gt;  &lt;/li&gt;  &lt;li&gt;   &lt;strong&gt;Business Validations&lt;/strong&gt;   &lt;ul&gt;    &lt;li&gt;     &lt;strong&gt;Check invoice eligibility for correction : &lt;/strong&gt;This step checks if this invoice is eligible for update. It performs the following checks :     &lt;ul&gt;      &lt;li&gt;Invoice Status is Reported or Calculated And Valid &lt;/li&gt;      &lt;li&gt;Invoice has not previously been Corrected or Cancelled&lt;/li&gt;      &lt;li&gt;There is no active Resubmit, Correct,Cancel invoice task &lt;/li&gt;      &lt;li&gt;The invoice is not a negative or a pre-invoice        &lt;br/&gt;       &lt;br/&gt;      &lt;/li&gt;      &lt;li&gt;       &lt;p&gt;If the invoice is found as non eligible for correction an         &lt;em&gt;HTTP 400 - Bad request&lt;/em&gt; error will be propagated to the caller along with an         &lt;a&gt;Error Information&lt;/a&gt; message       &lt;/p&gt;       &lt;div class&#x3D;\&quot;table-wrap\&quot;&gt;        &lt;table class&#x3D;\&quot;wrapped confluenceTable\&quot;&gt;         &lt;colgroup&gt;          &lt;col style&#x3D;\&quot;width: 51.0px;\&quot;/&gt;          &lt;col style&#x3D;\&quot;width: 51.0px;\&quot;/&gt;          &lt;col style&#x3D;\&quot;width: 51.0px;\&quot;/&gt;          &lt;col style&#x3D;\&quot;width: 51.0px;\&quot;/&gt;          &lt;col style&#x3D;\&quot;width: 280.0px;\&quot;/&gt;         &lt;/colgroup&gt;         &lt;thead&gt;          &lt;tr&gt;           &lt;th colspan&#x3D;\&quot;4\&quot; class&#x3D;\&quot;confluenceTh\&quot;&gt;            &lt;p&gt;Error Code&lt;/p&gt;           &lt;/th&gt;           &lt;th colspan&#x3D;\&quot;1\&quot; class&#x3D;\&quot;confluenceTh\&quot;&gt;            &lt;p&gt;Message&lt;/p&gt;           &lt;/th&gt;          &lt;/tr&gt;         &lt;/thead&gt;         &lt;tbody&gt;          &lt;tr&gt;           &lt;td colspan&#x3D;\&quot;4\&quot; class&#x3D;\&quot;confluenceTd\&quot;&gt;APICLM.BUS.ERROR.00029&lt;/td&gt;           &lt;td colspan&#x3D;\&quot;1\&quot; class&#x3D;\&quot;confluenceTd\&quot;&gt;Invoice is not eligible for correction&lt;/td&gt;          &lt;/tr&gt;         &lt;/tbody&gt;        &lt;/table&gt;       &lt;/div&gt;       &lt;p&gt;        &lt;br/&gt;        &lt;br/&gt;       &lt;/p&gt;      &lt;/li&gt;     &lt;/ul&gt;    &lt;/li&gt;    &lt;li&gt;     &lt;strong&gt;Merge Input with DB Retrieved Invoice :&lt;/strong&gt; The input provided invoice instance is validated against the retrieved invoice instance. If the updates are valid then these two invoice images will be merged into one. The steps to do so are     &lt;ul&gt;      &lt;li&gt;       &lt;strong&gt;Validate Requested Updates : &lt;/strong&gt;A  series of validation checks are performed to determine if an unsupported update is requested.       &lt;ul&gt;        &lt;li&gt;If at least one          &lt;a&gt;unsupported update&lt;/a&gt; is found  an          &lt;em&gt;HTTP 400 - Bad request&lt;/em&gt; error will be propagated to the caller along with an          &lt;a&gt;Error Information&lt;/a&gt; message        &lt;/li&gt;       &lt;/ul&gt;      &lt;/li&gt;     &lt;/ul&gt;    &lt;/li&gt;   &lt;/ul&gt;  &lt;/li&gt; &lt;/ul&gt; &lt;ul&gt;  &lt;li style&#x3D;\&quot;list-style-type: none;background-image: none;\&quot;&gt;   &lt;ul&gt;    &lt;li style&#x3D;\&quot;list-style-type: none;background-image: none;\&quot;&gt;     &lt;ul&gt;      &lt;li&gt;       &lt;strong&gt;Retrieve Batch(if exists)&lt;/strong&gt; : If batch number is provided in the service input then the batch Object will be retrieved      &lt;/li&gt;     &lt;/ul&gt;    &lt;/li&gt;   &lt;/ul&gt;  &lt;/li&gt; &lt;/ul&gt; &lt;ul&gt;  &lt;li style&#x3D;\&quot;list-style-type: none;background-image: none;\&quot;&gt;   &lt;ul&gt;    &lt;li style&#x3D;\&quot;list-style-type: none;background-image: none;\&quot;&gt;     &lt;ul&gt;      &lt;li&gt;       &lt;strong&gt;Perform Invoice Business Validations: &lt;/strong&gt;       &lt;br/&gt;       &lt;ul&gt;        &lt;li&gt;The merged Invoice Object along with the retrieved Batch Object  (if exists) will be validated against a set of business rules&gt; Validations section&lt;/a&gt; , (Entity &#x3D;Invoice) which check the data validity.         &lt;br/&gt;         &lt;ul&gt;          &lt;li&gt;If the Validation fails, an            &lt;em&gt;HTTP 400 - Bad request&lt;/em&gt; error will be propagated to the caller along with an            &lt;a&gt;Error Information&lt;/a&gt; message           &lt;br/&gt;           &lt;br/&gt;          &lt;/li&gt;         &lt;/ul&gt;        &lt;/li&gt;       &lt;/ul&gt;      &lt;/li&gt;      &lt;li&gt;       &lt;strong&gt;Perform Invoice Currency Validations&lt;/strong&gt;       &lt;ul&gt;        &lt;li&gt;         &lt;strong&gt;Retrieve Invoice supported Payment Currencies : &lt;/strong&gt;A service will be used to retrieve the          &lt;span style&#x3D;\&quot;color: rgb(255,0,0);\&quot;&gt;          &lt;span style&#x3D;\&quot;color: rgb(0,51,102);\&quot;&gt;payment restricted list of currencies&lt;/span&gt;          &lt;span style&#x3D;\&quot;color: rgb(0,51,102);\&quot;&gt;which are configured at system level&lt;/span&gt;.          &lt;span style&#x3D;\&quot;color: rgb(0,51,102);\&quot;&gt;The service will also take into account the customer configured preference &amp;quot;Additional Payment Currencies&amp;quot;. (service            &lt;em&gt;CurrencyDS.queryInvoicePaymentCurrencies&lt;/em&gt;          &lt;/span&gt;         &lt;/span&gt;         &lt;span style&#x3D;\&quot;color: rgb(255,0,0);\&quot;&gt;          &lt;span style&#x3D;\&quot;color: rgb(0,51,102);\&quot;&gt;)&lt;/span&gt;         &lt;/span&gt;         &lt;br/&gt;         &lt;strong&gt;          &lt;span style&#x3D;\&quot;color: rgb(255,0,0);\&quot;&gt;           &lt;span style&#x3D;\&quot;color: rgb(0,51,102);\&quot;&gt;&lt;/span&gt;          &lt;/span&gt;          &lt;br/&gt;         &lt;/strong&gt;        &lt;/li&gt;       &lt;/ul&gt;      &lt;/li&gt;      &lt;li&gt;       &lt;strong&gt;Check Invoice Payment Currency&lt;/strong&gt;: Validate if the provided  invoice payment  currency is within the supported Invoice Payment Currency list.        &lt;ul&gt;        &lt;li&gt;         &lt;p style&#x3D;\&quot;padding: 0.0px;\&quot;&gt;If the validation fails, an           &lt;em&gt;HTTP 400 - Bad request&lt;/em&gt; error will be propagated to the caller along with an           &lt;a&gt;Error Information&lt;/a&gt; message         &lt;/p&gt;         &lt;div class&#x3D;\&quot;table-wrap\&quot; style&#x3D;\&quot;padding: 0.0px;\&quot;&gt;          &lt;p&gt;           &lt;br/&gt;          &lt;/p&gt;          &lt;div class&#x3D;\&quot;table-wrap\&quot;&gt;           &lt;table class&#x3D;\&quot;wrapped confluenceTable\&quot;&gt;            &lt;colgroup&gt;             &lt;col/&gt;             &lt;col/&gt;             &lt;col/&gt;             &lt;col/&gt;             &lt;col/&gt;            &lt;/colgroup&gt;            &lt;thead&gt;             &lt;tr&gt;              &lt;th colspan&#x3D;\&quot;4\&quot; class&#x3D;\&quot;confluenceTh\&quot;&gt;               &lt;p style&#x3D;\&quot;padding: 0.0px;\&quot;&gt;Error Code&lt;/p&gt;              &lt;/th&gt;              &lt;th colspan&#x3D;\&quot;1\&quot; class&#x3D;\&quot;confluenceTh\&quot;&gt;               &lt;p style&#x3D;\&quot;padding: 0.0px;\&quot;&gt;Message&lt;/p&gt;              &lt;/th&gt;             &lt;/tr&gt;            &lt;/thead&gt;            &lt;tbody&gt;             &lt;tr&gt;              &lt;td colspan&#x3D;\&quot;4\&quot; class&#x3D;\&quot;confluenceTd\&quot;&gt;APICLM.BUS.ERROR.00025&lt;/td&gt;              &lt;td colspan&#x3D;\&quot;1\&quot; class&#x3D;\&quot;confluenceTd\&quot;&gt;Not supported Invoice Payment Currency.&lt;/td&gt;             &lt;/tr&gt;            &lt;/tbody&gt;           &lt;/table&gt;          &lt;/div&gt;          &lt;p&gt;           &lt;br/&gt;          &lt;/p&gt;          &lt;br/&gt;          &lt;p&gt;           &lt;br/&gt;          &lt;/p&gt;         &lt;/div&gt;        &lt;/li&gt;       &lt;/ul&gt;       &lt;strong&gt;        &lt;br/&gt;       &lt;/strong&gt;      &lt;/li&gt;     &lt;/ul&gt;    &lt;/li&gt;   &lt;/ul&gt;  &lt;/li&gt; &lt;/ul&gt; &lt;ul&gt;  &lt;li style&#x3D;\&quot;list-style-type: none;background-image: none;\&quot;&gt;   &lt;ul&gt;    &lt;li&gt;     &lt;strong&gt;Correct Invoice :&lt;/strong&gt;     &lt;ul&gt;      &lt;li&gt;       &lt;strong&gt;Invoice Status &#x3D; Calculated &amp;amp; Valid or Reported: &lt;/strong&gt;When the invoice is in one of these two statuses it cannot be directly updated. The original invoice must be adjusted meaning a new invoice will be created as a copy of the original invoice and will be updated according to the input invoice image. The steps are :       &lt;ul&gt;        &lt;li&gt;         &lt;strong&gt;Adjust Invoice :&lt;/strong&gt; The original invoice will be Cancelled and a new Invoice will be created as a copy of the original one         &lt;ul&gt;          &lt;li&gt;If the Adjustment action fails, an            &lt;em&gt;HTTP 400 - Bad request&lt;/em&gt; error will be propagated to the caller along with an            &lt;a&gt;Error Information&lt;/a&gt; message          &lt;/li&gt;         &lt;/ul&gt;        &lt;/li&gt;        &lt;li&gt;         &lt;strong&gt;          &lt;span class&#x3D;\&quot;inline-comment-marker\&quot; data-ref&#x3D;\&quot;6ab9300e-b1b9-4700-ae95-eb942d51b56a\&quot;&gt;Update Adjusted Invoice&lt;/span&gt; :         &lt;/strong&gt;  The Adjusted Invoice image will be merged with the requested updates. The merged image will be persisted in MedNeXt+ DB        &lt;/li&gt;        &lt;li&gt;         &lt;strong&gt;Create Invoice Link : &lt;/strong&gt; The link between the original and the new invoice (as created by the adjustment step) will be saved to trace the results of the adjustment action. The type of the link will be &amp;quot;CORRECT INVOICE&amp;quot;         &lt;/li&gt;        &lt;li&gt;         &lt;strong&gt;Copy Bypass Line Transactions&lt;/strong&gt; : Any bypass decisions taken over raised inconsistencies upon the original Invoice&#x27;s Lines must be copied to the new invoice.This will prevent the computation process to raise the same inconsistencies when executed for the new invoice         &lt;br/&gt;         &lt;br/&gt;        &lt;/li&gt;       &lt;/ul&gt;      &lt;/li&gt;      &lt;li&gt;       &lt;strong&gt;Invoice Status &#x3D; New or Pending : &lt;/strong&gt;When an invoice is in either of these two statuses it means it can be updated        &lt;br/&gt;       &lt;ul&gt;        &lt;li&gt;         &lt;strong&gt;Update Invoice :&lt;/strong&gt; The existing invoice is updated (         &lt;ul&gt;          &lt;li&gt;If the Update Invoice action fails, an            &lt;em&gt;HTTP 400 - Bad request&lt;/em&gt; error will be propagated to the caller along with an            &lt;a &gt;Error Information&lt;/a&gt; message          &lt;/li&gt;         &lt;/ul&gt;        &lt;/li&gt;        &lt;li&gt;         &lt;strong&gt;Copy Bypass Line Transactions&lt;/strong&gt; : Any bypass decisions taken over raised inconcistencies upon the original Invoice Lines must be copied over the new invoice.          &lt;ul&gt;          &lt;li&gt;If the Copy Bypass Transactions  action fails, an            &lt;em&gt;HTTP 400 - Bad request&lt;/em&gt; error will be propagated to the caller along with an            &lt;a &gt;Error Information&lt;/a&gt; message           &lt;br/&gt;           &lt;br/&gt;          &lt;/li&gt;         &lt;/ul&gt;        &lt;/li&gt;       &lt;/ul&gt;      &lt;/li&gt;     &lt;/ul&gt;    &lt;/li&gt;   &lt;/ul&gt;   &lt;ul&gt;    &lt;li&gt;     &lt;strong&gt;Start Invoice Process :&lt;/strong&gt; In case the Invoice creation is successful then a ProcessInvoiceCase Process will be triggered. As ProcessInvoiceCase support multiple starting points, it must start from the point where Auto Review Process     &lt;ul&gt;      &lt;li&gt;Auto review process will try to Compute the Invoice if a list of Business Rules are evaluated as true (See       &lt;a&gt; Validations section&lt;/a&gt; , Entity &#x3D;Auto Review). The set of rules are evaluated by the AutoReview process and not the API itself.       &lt;ul&gt;        &lt;li&gt;If the at least one Business Rule evaluates to false, Auto Review process will not be executed and A Correct Invoice HumanTask will be created for manually handling the invoice&lt;/li&gt;        &lt;li&gt;If all Business Rules evaluate to true, then Auto Review process will be executed and the invoice will be          &lt;strong&gt;computed. &lt;/strong&gt;Depending on the computation results:         &lt;ul&gt;          &lt;li&gt;A Review Inconsistencies (Technical or Medical) Human tasks will be created if the computation process, raised inconsistencies&lt;/li&gt;          &lt;li&gt;The invoice will be marked as &amp;quot;Ready for reporting&amp;quot; if the computation process finished successfully           &lt;br/&gt;           &lt;br/&gt;          &lt;/li&gt;         &lt;/ul&gt;        &lt;/li&gt;       &lt;/ul&gt;      &lt;/li&gt;     &lt;/ul&gt;     &lt;div class&#x3D;\&quot;confluence-information-macro confluence-information-macro-information conf-macro output-block\&quot; data-hasbody&#x3D;\&quot;true\&quot; data-macro-name&#x3D;\&quot;info\&quot;&gt;      &lt;p class&#x3D;\&quot;title\&quot;&gt;Information&lt;/p&gt;      &lt;span class&#x3D;\&quot;aui-icon aui-icon-small aui-iconfont-info confluence-information-macro-icon\&quot;&gt;&lt;/span&gt;      &lt;div class&#x3D;\&quot;confluence-information-macro-body\&quot;&gt;       &lt;p&gt;The &amp;quot;Start Invoice Process&amp;quot; describes the logic of ProcessInvoiceCase Process. API will only initiate ProcessInvoiceCase and will proceed to next step         &lt;em&gt;(Reply)&lt;/em&gt;       &lt;/p&gt;      &lt;/div&gt;     &lt;/div&gt;    &lt;/li&gt;   &lt;/ul&gt;  &lt;/li&gt; &lt;/ul&gt; &lt;ul&gt;  &lt;li&gt;   &lt;strong&gt;Reply :&lt;/strong&gt;The service will reply with the corrected invoice object enriched with the new invoice ID  &lt;/li&gt; &lt;/ul&gt; # noqa: E501

    :param body: 
    :type body: dict | bytes

    :rtype: CreateInvoiceResponseCBMType
    """
    if connexion.request.is_json:
        body = CorrectInvoiceCBMType.from_dict(connexion.request.get_json())  # noqa: E501
    return 'do some magic!'


def create_invoice(body=None):  # noqa: E501
    """Create Invoice

    &lt;h3&gt;Purpose&lt;/h3&gt; To provide the consumer with the ability to create an invoice and its related information (e.g. diagnosis, lines, procedures, notes, etc) in MedNeXt in a single call.  &lt;h3&gt;Service Flow Description&lt;/h3&gt; &lt;p&gt;The Create Invoice service logic is &lt;/p&gt; &lt;ul&gt;  &lt;li&gt;An API Consumer invokes a service providing an    &lt;A&gt;Invoice&lt;/a&gt; Object  &lt;/li&gt;  &lt;li&gt;   &lt;strong&gt;Validate Invoice Message Structure:&lt;/strong&gt; The    &lt;a&gt;Invoice&lt;/a&gt; object will be validated if it is schemantically correct   &lt;ul&gt;    &lt;li&gt;If the validation fails, an      &lt;em&gt;HTTP 400 - Bad request&lt;/em&gt; error will be propagated to the caller along with an      &lt;a&gt;Error Information&lt;/a&gt; message    &lt;/li&gt;   &lt;/ul&gt;  &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;  &lt;br/&gt; &lt;/p&gt; &lt;ul&gt;  &lt;li&gt;   &lt;strong&gt;Retrieve Batch(if exists)&lt;/strong&gt; : If batch number is provided in the service input then the batch Object will be retrieved  &lt;/li&gt; &lt;/ul&gt; &lt;ul&gt;  &lt;li&gt;   &lt;strong&gt;Perform Invoice Business Validations: &lt;/strong&gt;The received Invoice Object will be validated against a set of business rules(See   &lt;a&gt; Validations section&lt;/a&gt; , Entity &#x3D;Invoice) which check the data validity .   &lt;br/&gt;   &lt;ul&gt;    &lt;li&gt;If the Validation fails, an      &lt;em&gt;HTTP 400 - Bad request&lt;/em&gt; error will be propagated to the caller along with an      &lt;a&gt;Error Information&lt;/a&gt; message     &lt;br/&gt;     &lt;br/&gt;    &lt;/li&gt;   &lt;/ul&gt;  &lt;/li&gt;  &lt;li&gt;   &lt;strong&gt;Perform Invoice Currency Validations&lt;/strong&gt;   &lt;ul&gt;    &lt;li&gt;     &lt;strong&gt;      &lt;strong&gt;Retrieve Invoice supported Payment Currencies : &lt;/strong&gt;     &lt;/strong&gt;A service will be used to retrieve the      &lt;span style&#x3D;\&quot;color: rgb(255,0,0);\&quot;&gt;      &lt;span style&#x3D;\&quot;color: rgb(0,51,102);\&quot;&gt;payment restricted list of currencies&lt;/span&gt;      &lt;span style&#x3D;\&quot;color: rgb(0,51,102);\&quot;&gt;which are configured at system level&lt;/span&gt;.      &lt;span style&#x3D;\&quot;color: rgb(0,51,102);\&quot;&gt;The service will also take into account the customer configured preference &amp;quot;Additional Payment Currencies&amp;quot;.      &lt;/span&gt;     &lt;/span&gt;     &lt;span style&#x3D;\&quot;color: rgb(255,0,0);\&quot;&gt;      &lt;span style&#x3D;\&quot;color: rgb(0,51,102);\&quot;&gt;&lt;/span&gt;     &lt;/span&gt;     &lt;br/&gt;     &lt;strong&gt;      &lt;span style&#x3D;\&quot;color: rgb(255,0,0);\&quot;&gt;       &lt;span style&#x3D;\&quot;color: rgb(0,51,102);\&quot;&gt;&lt;/span&gt;      &lt;/span&gt;      &lt;br/&gt;     &lt;/strong&gt;    &lt;/li&gt;    &lt;li&gt;     &lt;strong&gt;Check Invoice Payment Currency&lt;/strong&gt; : Validate if the provided  invoice payment  currency is within the supported Invoice Payment Currency list.      &lt;ul&gt;      &lt;li&gt;       &lt;p&gt;If the validation fails, an         &lt;em&gt;HTTP 400 - Bad request&lt;/em&gt; error will be propagated to the caller along with an         &lt;a&gt;Error Information&lt;/a&gt; message       &lt;/p&gt;       &lt;div class&#x3D;\&quot;table-wrap\&quot;&gt;        &lt;table&gt;         &lt;colgroup&gt;          &lt;col/&gt;          &lt;col/&gt;          &lt;col/&gt;          &lt;col/&gt;          &lt;col/&gt;         &lt;/colgroup&gt;         &lt;thead&gt;          &lt;tr&gt;           &lt;th colspan&#x3D;\&quot;4\&quot;&gt;            &lt;p&gt;Error Code&lt;/p&gt;           &lt;/th&gt;           &lt;th colspan&#x3D;\&quot;1\&quot;&gt;            &lt;p&gt;Message&lt;/p&gt;           &lt;/th&gt;          &lt;/tr&gt;         &lt;/thead&gt;         &lt;tbody&gt;          &lt;tr&gt;           &lt;td colspan&#x3D;\&quot;4\&quot;&gt;            &lt;span&gt;APICLM.BUS.ERROR.00025&lt;/span&gt;           &lt;/td&gt;           &lt;td colspan&#x3D;\&quot;1\&quot;&gt;Not supported Invoice Payment Currency.&lt;/td&gt;          &lt;/tr&gt;         &lt;/tbody&gt;        &lt;/table&gt;       &lt;/div&gt;      &lt;/li&gt;     &lt;/ul&gt;    &lt;/li&gt;    &lt;/li&gt;   &lt;/ul&gt;  &lt;/li&gt; &lt;/ul&gt; &lt;ul&gt;  &lt;li&gt;   &lt;strong&gt;Create Invoice :&lt;/strong&gt; The purpose of this process step is to persist the Invoice object(and its child entities such as Invoice Lines, Incident, Exchange Rates etc) in MedNeXt+DB. The steps to do so are :   &lt;ul&gt;    &lt;li&gt;     &lt;strong&gt;      &lt;span&gt;Incident Checks:&lt;/span&gt;     &lt;/strong&gt;     &lt;ul&gt;      &lt;li&gt;If an        &lt;u&gt;incident number is provided&lt;/u&gt; then, it will be retrieved from MedNeXt+ DB using        &lt;em&gt;IncidentBAS.queryIncidentById&lt;/em&gt; service .        &lt;ul&gt;        &lt;li&gt;If the Incident is not found an          &lt;em&gt;HTTP 400 - Bad request&lt;/em&gt; error will be propagated to the caller along with an          &lt;a&gt;Error Information&lt;/a&gt; message        &lt;/li&gt;        &lt;li&gt;If the Incident exists, then the invoice will be linked with this incident&lt;/li&gt;       &lt;/ul&gt;      &lt;/li&gt;     &lt;/ul&gt;    &lt;/li&gt;   &lt;/ul&gt;   &lt;br/&gt;   &lt;ul&gt;    &lt;li&gt;     &lt;ul&gt;      &lt;li&gt;If an incident object        &lt;u&gt;without an incident number&lt;/u&gt; is provided then the existing API Incident service (POST request on /mednext/authorisation/incident) will be called to create the incident and the Case subentity.       &lt;ul&gt;        &lt;li&gt;If the Incident service fails, an          &lt;em&gt;HTTP 400 - Bad request&lt;/em&gt; error will be propagated to the caller along with an          &lt;a&gt;Error Information&lt;/a&gt; message         &lt;br/&gt;         &lt;br/&gt;        &lt;/li&gt;       &lt;/ul&gt;      &lt;/li&gt;     &lt;/ul&gt;    &lt;/li&gt;    &lt;li&gt;     &lt;strong&gt;Claims checks&lt;/strong&gt; :     &lt;ul&gt;      &lt;li&gt;If an        &lt;u&gt;claim number is provided&lt;/u&gt; then, it will be retrieved from MedNeXt+ DB        &lt;ul&gt;        &lt;li&gt;If the Claim is not found an          &lt;em&gt;HTTP 400 - Bad request&lt;/em&gt; error will be propagated to the caller along with an          &lt;a&gt;Error Information&lt;/a&gt; message        &lt;/li&gt;        &lt;li&gt;If the Claim exists, then the invoice will be linked with this Claim         &lt;br/&gt;         &lt;br/&gt;        &lt;/li&gt;       &lt;/ul&gt;      &lt;/li&gt;      &lt;li&gt;If an Claim object        &lt;u&gt;without a Claim number&lt;/u&gt; is provided then the existing API Claim service (POST request on /mednext/claim/claim) will be called to create the Claim entiy.       &lt;ul&gt;        &lt;li&gt;If the Claim service fails, an          &lt;em&gt;HTTP 400 - Bad request&lt;/em&gt; error will be propagated to the caller along with an          &lt;a&gt;Error Information&lt;/a&gt; message        &lt;/li&gt;       &lt;/ul&gt;      &lt;/li&gt;     &lt;/ul&gt;    &lt;/li&gt;    &lt;li&gt;A Service will be used to persist Invoice and every sub-entity.      &lt;ul&gt;      &lt;li&gt;The Incident will be automatically linked with the Invoice&lt;/li&gt;      &lt;li&gt;The case will be automatically linked with the Incident        &lt;br/&gt;       &lt;ul&gt;        &lt;li&gt;If the Invoice is not persisted due to service exception,  an          &lt;em&gt;HTTP 400 &lt;/em&gt;response will be propagated to the caller containing an          &lt;a&gt;Error Information&lt;/a&gt; message         &lt;br/&gt;         &lt;br/&gt;        &lt;/li&gt;       &lt;/ul&gt;      &lt;/li&gt;     &lt;/ul&gt;    &lt;/li&gt;   &lt;/ul&gt;  &lt;/li&gt;  &lt;li&gt;   &lt;strong&gt;Start Invoice Process :&lt;/strong&gt; In case the Invoice creation is succesful then a ProcessInvoiceCase Process will be triggered. As ProcessInvoiceCase support multiple starting points, it must start from the point of Auto Review Process :   &lt;ul&gt;    &lt;li&gt;     &lt;strong&gt;Auto review process&lt;/strong&gt; will try to Compute the Invoice if a list of Business Rules are evaluated as true (See     &lt;a&gt; Validations section&lt;/a&gt; , Entity &#x3D;Auto Review). The set of rules are evaluated by the AutoReview process and not the API itself.     &lt;ul&gt;      &lt;li&gt;If the at least one Business Rule evaluates to false, Auto Review process will not be executed and A Correct Invoice HumanTask will be created for manually handling the invoice&lt;/li&gt;      &lt;li&gt;If all Business Rules evaluate to true, then Auto Review process will be executed and the invoice will be        &lt;strong&gt;computed. &lt;/strong&gt;Depending on the computation results:       &lt;ul&gt;        &lt;li&gt;A Review Inconsistencies (Technical or Medical) Human tasks will be created if the computation process raised inconsistencies&lt;/li&gt;        &lt;li&gt;The invoice will be marked as &amp;quot;Ready for reporting&amp;quot; if the computation process finished successfully&lt;/li&gt;       &lt;/ul&gt;      &lt;/li&gt;     &lt;/ul&gt;    &lt;/li&gt;   &lt;/ul&gt;   &lt;div&gt;    &lt;p class&#x3D;\&quot;title\&quot;&gt;Information&lt;/p&gt;    &lt;div&gt;     &lt;p&gt;The &amp;quot;Start Invoice Process&amp;quot; describes the logic of ProcessInvoiceCase Process. API will only initiate ProcessInvoiceCase and will proceed to next step       &lt;em&gt;(Reply)&lt;/em&gt;     &lt;/p&gt;    &lt;/div&gt;   &lt;/div&gt;  &lt;/li&gt; &lt;/ul&gt; &lt;ul&gt;  &lt;li&gt;   &lt;strong&gt;Reply :&lt;/strong&gt;The service will reply with the created invoice object enriched with the new invoice ID  &lt;/li&gt; &lt;/ul&gt; # noqa: E501

    :param body: 
    :type body: dict | bytes

    :rtype: CreateInvoiceResponseCBMType
    """
    if connexion.request.is_json:
        body = CreateInvoiceCBMType.from_dict(connexion.request.get_json())  # noqa: E501
    return 'do some magic!'


def search_invoice(page_number, page_size, invoice_id, batch_id, policy_id, member_id, status, billing_provider, external_reference_id, service_provider=None):  # noqa: E501
    """Search Invoice

    &lt;h3&gt;Purpose&lt;/h3&gt; To retrieve a list of invoices with their related information based on specific criteria.  &lt;h3&gt;Prerequisites&lt;/h3&gt;   &lt;ul&gt;     &lt;li&gt;At least one of the above search criteria must be provided in the service request to restrict the returned results. When no search criteria are provided, the service will respond back an error requesting at least one of the search criteria to be provided.&lt;/li&gt;       &lt;ul&gt;         &lt;li&gt;invoiceId : The invoice id&lt;/li&gt;         &lt;li&gt;batchId : The batch unique id &lt;/li&gt;     &lt;li&gt;memberId : The member id&lt;/li&gt;         &lt;li&gt;policyId : The policy id&lt;/li&gt;         &lt;li&gt;InvoiceStatus : The invoice status&lt;/li&gt;         &lt;li&gt;billingProvider : The billing provider id&lt;/li&gt;         &lt;li&gt;externalReferenceId : The invoice external reference id &lt;/li&gt;     &lt;li&gt;pageNumber : pagination result set number&lt;/li&gt;                &lt;li&gt;pageSize : records in result&lt;/li&gt;                  &lt;/ul&gt;   &lt;/ul&gt;   &lt;h3&gt;Service Flow Description&lt;/h3&gt; &lt;p&gt;The Search Invoices service logic is :&lt;/p&gt; &lt;ul&gt;     &lt;li&gt;Service input is validated. At least one search parameter must be provided         &lt;ul&gt;             &lt;li&gt;If no parameter is provided , an &lt;em&gt;HTTP 400 - Bad request&lt;/em&gt; error will be propagated to the caller along with an Error Information message&lt;/li&gt;             &lt;li&gt;If pageSize is greater than the &lt;strong&gt;configured&lt;/strong&gt; maximum page size, an &lt;em&gt;HTTP 400 - Bad request&lt;/em&gt; error will be propagated to the caller along with an Error Information message&lt;/li&gt;             &lt;li&gt;If no pageSize or pageNumber is provided, the default pre-configured values will be applied &lt;/li&gt;         &lt;/ul&gt;     &lt;/li&gt;     &lt;li&gt;If the InvoiceId is provided, any other search criteria will be ignored&lt;/li&gt;     &lt;li&gt;If no Invoice Id is provided, the rest input criteria will used&lt;/li&gt;     &lt;li&gt;The result will be mapped to a list of Invoice objects and will be returned as the service response&lt;/li&gt; &lt;/ul&gt; # noqa: E501

    :param page_number: Page Number
    :type page_number: int
    :param page_size: Page size
    :type page_size: int
    :param invoice_id: Invoice unique id
    :type invoice_id: str
    :param batch_id: The batch unique id
    :type batch_id: str
    :param policy_id: Policy unique Id
    :type policy_id: int
    :param member_id: Member unique id
    :type member_id: int
    :param status: The entity status
    :type status: str
    :param billing_provider: The Billing Provider unique id
    :type billing_provider: str
    :param external_reference_id: The entity external reference id 
    :type external_reference_id: str
    :param service_provider: The service provider code
    :type service_provider: str

    :rtype: SearchInvoiceResponseCBMType
    """
    return 'do some magic!'


def searchinvoicetransaction(page_size, page_number, invoice_nbr=None, invoice_line_nbr=None):  # noqa: E501
    """Search Invoice Transaction

    &lt;h3&gt;Purpose&lt;/h3&gt; To retrieve a list of invoice transaction with their related information based on specific criteria.  &lt;h3&gt;Prerequisites&lt;/h3&gt;   &lt;ul&gt;     &lt;li&gt;At least one of the above search criteria must be provided in the service request to restrict the returned results. When no search criteria are provided, the service will respond back an error requesting at least one of the search criteria to be provided.&lt;/li&gt;       &lt;ul&gt;         &lt;li&gt;invoiceNbr : The invoice id&lt;/li&gt;         &lt;li&gt;invoicelineNbr : The invoice line id &lt;/li&gt;    &lt;/ul&gt;   &lt;/ul&gt;   &lt;h3&gt;Service Flow Description&lt;/h3&gt; &lt;p&gt;The Search Invoice Transaction service logic is :&lt;/p&gt; &lt;ul&gt;     &lt;li&gt;Service input is validated. At least one search parameter must be provided         &lt;ul&gt;             &lt;li&gt;If no parameter is provided , an &lt;em&gt;HTTP 400 - Bad request&lt;/em&gt; error will be propagated to the caller along with an Error Information message&lt;/li&gt;             &lt;li&gt;If pageSize is greater than the &lt;strong&gt;configured&lt;/strong&gt; maximum page size, an &lt;em&gt;HTTP 400 - Bad request&lt;/em&gt; error will be propagated to the caller along with an Error Information message&lt;/li&gt;             &lt;li&gt;If no pageSize or pageNumber is provided, the default pre-configured values will be applied &lt;/li&gt;         &lt;/ul&gt;     &lt;/li&gt;     &lt;li&gt;The result will be mapped to a list of Invoice transaction objects and will be returned as the service response&lt;/li&gt; &lt;/ul&gt; # noqa: E501

    :param page_size: Page size
    :type page_size: int
    :param page_number: Page Number
    :type page_number: int
    :param invoice_nbr: Invoice Number
    :type invoice_nbr: str
    :param invoice_line_nbr: 
    :type invoice_line_nbr: str

    :rtype: SearchInvoiceTransactionResponseCBMType
    """
    return 'do some magic!'
